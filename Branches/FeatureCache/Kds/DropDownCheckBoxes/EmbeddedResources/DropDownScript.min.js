/* Copyright: Maxim Saplin 2010, 2011
* Under LGPL License
* Hitch function from http://think-robot.com/2009/06/hitch-object-oriented-event-handlers-with-jquery/ 
*/
function DropDownScript(t, i, e, s, c, n, h) { this.id = t, this.divPstfx = i, this.selectPstfx = e, this.postbackFunction = s, this.useButtons = c, this.autoPost = n, this.useSelectAll = h, this.divId = this.id + this.divPstfx, this.selId = this.id + this.selectPstfx, this.selection = new Array, this.visible = !1, this.preventHide = !1, this.initialized = !1 } !function (t) { t.fn.hitch = function (t, i, e) { return this.bind(t, function () { return i.apply(e || this, Array.prototype.slice.call(arguments)) }) } }(jQuery), DropDownScript.prototype.update = function (t, i, e, s, c, n) { this.divPstfx = t, this.selectPstfx = i, this.postbackFunction = e, this.useButtons = s, this.autoPost = c, this.useSelectAll = n, this.divId = this.id + this.divPstfx, this.selId = this.id + this.selectPstfx, this.initEvents() }, DropDownScript.prototype.init = function () { var t = this; "undefined" != typeof Sys && Sys.WebForms.PageRequestManager.getInstance().add_endRequest(function () { t.initEvents() }), this.initEventHandlers(), this.initEvents(), this.initialized = !0 }, DropDownScript.prototype.initEventHandlers = function () { this.documentClickHandler = function () { !this.preventHide && this.visible && (this.useButtons ? this.clickCancel() : this.autoPost ? this.clickOk() : this.hide()), this.preventHide = !1 }, this.divClickHandler = function (t) { t.stopPropagation() }, this.selectBoxClickHandler = function () { this.visible ? this.hide() : (this.show(), this.preventHide = !0) }, this.selectAllClickHandler = function (t) { this.useSelectAll && (t.target.checked ? this.selectAll() : this.deselectAll()) }, this.checkBoxClickHandler = function () { this.updateSelectAll() }, this.okClickHandler = function (t) { this.clickOk(), t.stopPropagation() }, this.cancelHandler = function (t) { this.clickCancel(), t.stopPropagation() } }, DropDownScript.prototype.initEvents = function () { this.initialized || $(document).hitch("click", this.documentClickHandler, this); var t = $("#" + this.divId); t.unbind("click.chk_dd"), t.hitch("click.chk_dd", this.divClickHandler, this); var i = $("#" + this.selId); i.unbind("click.chk_dd"), i.hitch("click.chk_dd", this.selectBoxClickHandler, this); var e = $("#" + this.divId + " input[type='checkbox']:first"); e.unbind("click.chk_dd"), this.useSelectAll && e.hitch("click.chk_dd", this.selectAllClickHandler, this); var s = this.getItems(); s.unbind("click.chk_dd"), s.hitch("click.chk_dd", this.checkBoxClickHandler, this); var c = $("#" + this.divId + " input[type='button']:first"); c.unbind("click.chk_dd"), c.hitch("click.chk_dd", this.okClickHandler, this); var n = $("#" + this.divId + " input[type='button']:gt(0)"); n.unbind("click.chk_dd"), n.hitch("click.chk_dd", this.cancelHandler, this) }, DropDownScript.prototype.clickOk = function () { this.hide(), this.saveSelection(), this.doPostBack() }, DropDownScript.prototype.clickCancel = function () { this.hide(), this.restoreSelection() }, DropDownScript.prototype.getItems = function () { return $("#" + this.id + " input[type='checkbox']") }, DropDownScript.prototype.show = function () { $("#" + this.divId).show(), this.visible = !0, this.saveSelection(), this.updateSelectAll() }, DropDownScript.prototype.hide = function () { $("#" + this.divId).hide(), this.visible = !1 }, DropDownScript.prototype.updateSelectAll = function () { if (this.useSelectAll) { for (var t = !0, i = this.getItems(), e = 0; e < i.length; e++) if (0 == i[e].checked) { t = !1; break } $("#" + this.divId + " input[type='checkbox']:first").prop("checked", t) } }, DropDownScript.prototype.selectAll = function () { this.getItems().prop("checked", !0) }, DropDownScript.prototype.deselectAll = function () { this.getItems().prop("checked", !1) }, DropDownScript.prototype.saveSelection = function () { for (var t = this.getItems(), i = 0; i < t.length; i++) this.selection[i] = t[i].checked ? !0 : !1 }, DropDownScript.prototype.restoreSelection = function () { var t = this.getItems(); if (this.selection.length > 0) for (var i = 0; i < t.length; i++) t[i].checked = this.selection[i] }, DropDownScript.prototype.doPostBack = function () { this.postbackFunction && this.postbackFunction.call() };
//(function (a) { a.fn.hitch = function (d, c, b) { return this.bind(d, function () { return c.apply(b || this, Array.prototype.slice.call(arguments)); }); }; })(jQuery); function DropDownScript(g, e, f, c, b, a, d) { this.id = g; this.divPstfx = e; this.selectPstfx = f; this.postbackFunction = c; this.useButtons = b; this.autoPost = a; this.useSelectAll = d; this.divId = this.id + this.divPstfx; this.selId = this.id + this.selectPstfx; this.selection = new Array(); this.visible = false; this.preventHide = false; this.initialized = false; } DropDownScript.prototype.update = function (e, f, c, b, a, d) { this.divPstfx = e; this.selectPstfx = f; this.postbackFunction = c; this.useButtons = b; this.autoPost = a; this.useSelectAll = d; this.divId = this.id + this.divPstfx; this.selId = this.id + this.selectPstfx; this.initEvents(); }; DropDownScript.prototype.init = function () { var a = this; if (typeof Sys != "undefined") { Sys.WebForms.PageRequestManager.getInstance().add_endRequest(function (c, b) { a.initEvents(); }); } this.initEventHandlers(); this.initEvents(); this.initialized = true; }; DropDownScript.prototype.initEventHandlers = function () { this.documentClickHandler = function () { if (!this.preventHide && this.visible) { if (this.useButtons) { this.clickCancel(); } else { if (this.autoPost) { this.clickOk(); } else { this.hide(); } } } this.preventHide = false; }; this.divClickHandler = function (a) { a.stopPropagation(); }; this.selectBoxClickHandler = function (a) { if (this.visible) { this.hide(); } else { this.show(); this.preventHide = true; } }; this.selectAllClickHandler = function (a) { if (!this.useSelectAll) { return; } if (a.target.checked) { this.selectAll(); } else { this.deselectAll(); } }; this.checkBoxClickHandler = function (a) { this.updateSelectAll(); }; this.okClickHandler = function (a) { this.clickOk(); a.stopPropagation(); }; this.cancelHandler = function (a) { this.clickCancel(); a.stopPropagation(); }; }; DropDownScript.prototype.initEvents = function () { if (!this.initialized) { $(document).hitch("click", this.documentClickHandler, this); } var f = $("#" + this.divId); f.unbind("click.chk_dd"); f.hitch("click.chk_dd", this.divClickHandler, this); var c = $("#" + this.selId); c.unbind("click.chk_dd"); c.hitch("click.chk_dd", this.selectBoxClickHandler, this); var b = $("#" + this.divId + " input[type='checkbox']:first"); b.unbind("click.chk_dd"); if (this.useSelectAll) { b.hitch("click.chk_dd", this.selectAllClickHandler, this); } var a = this.getItems(); a.unbind("click.chk_dd"); a.hitch("click.chk_dd", this.checkBoxClickHandler, this); var e = $("#" + this.divId + " input[type='button']:first"); e.unbind("click.chk_dd"); e.hitch("click.chk_dd", this.okClickHandler, this); var d = $("#" + this.divId + " input[type='button']:gt(0)"); d.unbind("click.chk_dd"); d.hitch("click.chk_dd", this.cancelHandler, this); }; DropDownScript.prototype.clickOk = function () { this.hide(); this.saveSelection(); this.doPostBack(); }; DropDownScript.prototype.clickCancel = function () { this.hide(); this.restoreSelection(); }; DropDownScript.prototype.getItems = function () { return $("#" + this.id + " input[type='checkbox']"); }; DropDownScript.prototype.show = function () { $("#" + this.divId).show(); this.visible = true; this.saveSelection(); this.updateSelectAll(); }; DropDownScript.prototype.hide = function () { $("#" + this.divId).hide(); this.visible = false; }; DropDownScript.prototype.updateSelectAll = function () { if (!this.useSelectAll) { return; } var b = true; var a = this.getItems(); for (var c = 0; c < a.length; c++) { if (a[c].checked == false) { b = false; break; } } $("#" + this.divId + " input[type='checkbox']:first").attr("checked", b); }; DropDownScript.prototype.selectAll = function () { this.getItems().attr("checked", true); }; DropDownScript.prototype.deselectAll = function () { this.getItems().attr("checked", false); }; DropDownScript.prototype.saveSelection = function () { var a = this.getItems(); for (var b = 0; b < a.length; b++) { this.selection[b] = a[b].checked ? true : false; } }; DropDownScript.prototype.restoreSelection = function () { var a = this.getItems(); if (this.selection.length > 0) { for (var b = 0; b < a.length; b++) { a[b].checked = this.selection[b]; } } }; DropDownScript.prototype.doPostBack = function () { if (this.postbackFunction) { this.postbackFunction.call(); } };