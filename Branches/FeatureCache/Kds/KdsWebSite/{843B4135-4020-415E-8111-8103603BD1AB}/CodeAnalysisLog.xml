<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files\microsoft visual studio 10.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="10.0">
 <Targets>
  <Target Name="C:\Documents and Settings\meravn\Local Settings\Temp\tmp83A.tmp.cadir\bin\App_Code.dll">
   <Modules>
    <Module Name="app_code.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="wsBatch" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CalcBatch(System.Int64,System.String,System.String,System.Boolean,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsBatch.cs" Line="52">In method 'wsBatch.CalcBatch(long, string, string, bool, bool)', object 'client' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'client' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateHeavyReports(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsBatch.cs" Line="79">In method 'wsBatch.CreateHeavyReports(long)', object 'client' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'client' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateReprts(System.Int64,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsBatch.cs" Line="70">In method 'wsBatch.CreateReprts(long, string, int)', object 'client' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'client' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InputDataAndErrors(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsBatch.cs" Line="37">In method 'wsBatch.InputDataAndErrors(long)', object 'client' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'client' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RefreshMatzavOvdim()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsBatch.cs" Line="140">In method 'wsBatch.RefreshMatzavOvdim()', object 'client' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'client' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunPremiaRoutine(KdsLibrary.clGeneral+enGeneralBatchType,System.Int64,System.String,System.Int32,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsBatch.cs" Line="98">In method 'wsBatch.RunPremiaRoutine(clGeneral.enGeneralBatchType, long, string, int, long)', object 'client' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'client' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunRefreshMeafyenim()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsBatch.cs" Line="158">In method 'wsBatch.RunRefreshMeafyenim()', object 'client' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'client' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunRefreshPirteyOvdim()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsBatch.cs" Line="167">In method 'wsBatch.RunRefreshPirteyOvdim()', object 'client' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'client' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunTahalichSadran(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsBatch.cs" Line="149">In method 'wsBatch.RunTahalichSadran(string)', object 'client' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'client' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TransferToHilan(System.Int64,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsBatch.cs" Line="61">In method 'wsBatch.TransferToHilan(long, long)', object 'client' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'client' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="wsDynamicForms" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetKodOfDescription(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsDynamicForms.cs" Line="40">'wsDynamicForms.GetKodOfDescription(string, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMatchingDescription(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsDynamicForms.cs" Line="92">'wsDynamicForms.GetMatchingDescription(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMatchingKod(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsDynamicForms.cs" Line="73">'wsDynamicForms.GetMatchingKod(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="wsGeneral" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddNesiaReka(System.Int32,System.String,System.Int32,System.String,System.Int64,System.Int64,System.String,System.String,System.Int32,System.Int64,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1605">'wsGeneral.AddNesiaReka(int, string, int, string, long, long, string, string, int, long, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ApproveError(System.Int32,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1401">'wsGeneral.ApproveError(int, string, string, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BuildMakatDetails(System.Data.DataTable,System.String,System.String,System.String,System.Int64,System.Int64)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="141">In method 'wsGeneral.BuildMakatDetails(DataTable, string, string, string, long, long)', call System.IDisposable.Dispose on object 'dtElement' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="325">'wsGeneral.BuildMakatDetails(DataTable, string, string, string, long, long)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BuildOvedDetailsXml(System.Data.DataTable,System.Int32,System.DateTime)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="361">'wsGeneral.BuildOvedDetailsXml(DataTable, int, DateTime)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CancelError(System.Int32,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1383">'wsGeneral.CancelError(int, string, string, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckKodElement(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1204">'wsGeneral.CheckKodElement(string, string, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckMakat(System.Int64,System.Int64,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1016">'wsGeneral.CheckMakat(long, long, string, string, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckOtoNo(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="994">'wsGeneral.CheckOtoNo(long)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckRashamPail(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1127">'wsGeneral.CheckRashamPail(string, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAdminEmployeeById(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="698">'wsGeneral.GetAdminEmployeeById(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAdminEmployeeByName(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="738">'wsGeneral.GetAdminEmployeeByName(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDakotPremiya(System.Int32,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1489">In method 'wsGeneral.GetDakotPremiya(int, string, int)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1499">'wsGeneral.GetDakotPremiya(int, string, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetElements(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1510">In method 'wsGeneral.GetElements(string, int)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1517">'wsGeneral.GetElements(string, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFieldErrors(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1426">In method 'wsGeneral.GetFieldErrors(int, int, string, int, string, string, int, string)', call System.IDisposable.Dispose on object 'ds' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetIdOfYameyAvoda(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="487">In method 'wsGeneral.GetIdOfYameyAvoda(string, int, string)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="494">'wsGeneral.GetIdOfYameyAvoda(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetKodElementByTeur(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1241">'wsGeneral.GetKodElementByTeur(string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getKodSidurByTeur(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1308">'wsGeneral.getKodSidurByTeur(string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getKodSidurimWhithOutList(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1318">In method 'wsGeneral.getKodSidurimWhithOutList(string, int, string)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1326">'wsGeneral.getKodSidurimWhithOutList(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetLicenceNumber(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1088">In method 'wsGeneral.GetLicenceNumber(string, int, string)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1094">'wsGeneral.GetLicenceNumber(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetLoLetashlumRemark(System.Int32,System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1550">'wsGeneral.GetLoLetashlumRemark(int, string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMakatOfActivity(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1056">In method 'wsGeneral.GetMakatOfActivity(string, int, string)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1063">'wsGeneral.GetMakatOfActivity(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMakatType(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1030">'wsGeneral.GetMakatType(long)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMeafyenyeBitzuaCode(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="770">'wsGeneral.GetMeafyenyeBitzuaCode(string, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMeafyenyeBitzuaTeur(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="804">'wsGeneral.GetMeafyenyeBitzuaTeur(string, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getMigbalaLeErechElement(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1273">'wsGeneral.getMigbalaLeErechElement(string, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getMispareiRashamot(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1139">In method 'wsGeneral.getMispareiRashamot(string, int, string)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1146">'wsGeneral.getMispareiRashamot(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetNatunByTeur(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="872">'wsGeneral.GetNatunByTeur(string, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOvdim(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1473">In method 'wsGeneral.GetOvdim(string, int, string)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1480">'wsGeneral.GetOvdim(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOvdimById(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="538">In method 'wsGeneral.GetOvdimById(string, int, string)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="557">'wsGeneral.GetOvdimById(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOvdimByName(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="429">'wsGeneral.GetOvdimByName(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOvdimForPremiot(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="439">In method 'wsGeneral.GetOvdimForPremiot(string, int, string)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="446">'wsGeneral.GetOvdimForPremiot(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOvdimForPresence(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="455">In method 'wsGeneral.GetOvdimForPresence(string, int, string)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="478">'wsGeneral.GetOvdimForPresence(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOvdimFromLogBakashot(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="961">'wsGeneral.GetOvdimFromLogBakashot(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOvdimLeRitza(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1039">In method 'wsGeneral.GetOvdimLeRitza(string, int, string)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1046">'wsGeneral.GetOvdimLeRitza(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOvdimToUser(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="623">'wsGeneral.GetOvdimToUser(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOvdimToUserByName(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="658">'wsGeneral.GetOvdimToUserByName(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOvedAllDetails(System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="130">'wsGeneral.GetOvedAllDetails(int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOvedCardDetails()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="974">'wsGeneral.GetOvedCardDetails()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOvedMisparIshi(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="83">'wsGeneral.GetOvedMisparIshi(string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOvedName(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="381">'wsGeneral.GetOvedName(int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOvedSnifAndUnit(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="103">'wsGeneral.GetOvedSnifAndUnit(int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRequestList(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="930">'wsGeneral.GetRequestList(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSidurDetailsFromTnua(System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1365">'wsGeneral.GetSidurDetailsFromTnua(int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSidurimOvdim(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1105">In method 'wsGeneral.GetSidurimOvdim(string, int, string)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1112">'wsGeneral.GetSidurimOvdim(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSnifim(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="585">'wsGeneral.GetSnifim(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTeurByKod(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="838">'wsGeneral.GetTeurByKod(string, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTeurElements(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1218">In method 'wsGeneral.GetTeurElements(string, int)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1224">'wsGeneral.GetTeurElements(string, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getTeureySidurimWhithOutList(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1283">In method 'wsGeneral.getTeureySidurimWhithOutList(string, int, string)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1291">'wsGeneral.getTeureySidurimWhithOutList(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getTeurSidurByKod(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1343">'wsGeneral.getTeurSidurByKod(int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWorkersDetailsOfHoursApproval(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="888">In method 'wsGeneral.GetWorkersDetailsOfHoursApproval(string, int, string)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="900">'wsGeneral.GetWorkersDetailsOfHoursApproval(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWorkStation(System.String,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1072">In method 'wsGeneral.GetWorkStation(string, int, string)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1078">'wsGeneral.GetWorkStation(string, int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsCardExists(System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="63">'wsGeneral.IsCardExists(int, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetMeasherOMistayeg(System.Int32,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1533">'wsGeneral.SetMeasherOMistayeg(int, string, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TransformXsl(System.Data.DataSet)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\App_Code" File="wsGeneral.cs" Line="1463">In method 'wsGeneral.TransformXsl(DataSet)', call System.IDisposable.Dispose on object 'writer' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Documents and Settings\meravn\Local Settings\Temp\tmp83A.tmp.cadir\bin\App_Web_0p1scgni.dll">
   <Modules>
    <Module Name="app_web_0p1scgni.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="_Main" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#LoadProcessLog()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite" File="Main.aspx.cs" Line="65">'_Main.LoadProcessLog()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TestScan" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#getBarcodesLeOved()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite" File="TestScan.aspx.cs" Line="79">In method 'TestScan.getBarcodesLeOved()', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite" File="TestScan.aspx.cs" Line="93">'TestScan.getBarcodesLeOved()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#hideBtn_onClick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite" File="TestScan.aspx.cs" Line="120">'TestScan.hideBtn_onClick(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InsertBarcodeTable(System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite" File="TestScan.aspx.cs" Line="51">'TestScan.InsertBarcodeTable(int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowTachograf_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite" File="TestScan.aspx.cs" Line="59">In method 'TestScan.ShowTachograf_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite" File="TestScan.aspx.cs" Line="69">'TestScan.ShowTachograf_Click(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Documents and Settings\meravn\Local Settings\Temp\tmp83A.tmp.cadir\bin\App_Web_1fibcur0.dll">
   <Modules>
    <Module Name="app_web_1fibcur0.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Modules_Errors_EmployeeDetails" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetCurrentColSort()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeeDetails.aspx.cs" Line="282">'Modules_Errors_EmployeeDetails.GetCurrentColSort()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMisparimIshi()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeeDetails.aspx.cs" Line="160">'Modules_Errors_EmployeeDetails.GetMisparimIshi()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#grdOvedErrorCards_RowDataBound(System.Object,System.Web.UI.WebControls.GridViewRowEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeeDetails.aspx.cs" Line="178">In method 'Modules_Errors_EmployeeDetails.grdOvedErrorCards_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeeDetails.aspx.cs" Line="185">In method 'Modules_Errors_EmployeeDetails.grdOvedErrorCards_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeeDetails.aspx.cs" Line="172">In method 'Modules_Errors_EmployeeDetails.grdOvedErrorCards_RowDataBound(object, GridViewRowEventArgs)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MoveOved(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeeDetails.aspx.cs" Line="387">'Modules_Errors_EmployeeDetails.MoveOved(int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetOvedCards(System.Int32,System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeeDetails.aspx.cs" Line="113">In method 'Modules_Errors_EmployeeDetails.SetOvedCards(int, string, string)', object 'dv' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dv' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeeDetails.aspx.cs" Line="103">In method 'Modules_Errors_EmployeeDetails.SetOvedCards(int, string, string)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeeDetails.aspx.cs" Line="125">'Modules_Errors_EmployeeDetails.SetOvedCards(int, string, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetOvedDetailsDB(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeeDetails.aspx.cs" Line="66">In method 'Modules_Errors_EmployeeDetails.SetOvedDetailsDB(int)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeeDetails.aspx.cs" Line="86">'Modules_Errors_EmployeeDetails.SetOvedDetailsDB(int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Errors_EmployeErrors" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#btnRedirect_Click(System.Object,System.Web.UI.WebControls.CommandEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeErrors.aspx.cs" Line="610">'Modules_Errors_EmployeErrors.btnRedirect_Click(object, CommandEventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ddlSite_SelectedIndexChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeErrors.aspx.cs" Line="137">In method 'Modules_Errors_EmployeErrors.ddlSite_SelectedIndexChanged(object, EventArgs)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FillPirteySinun()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeErrors.aspx.cs" Line="407">'Modules_Errors_EmployeErrors.FillPirteySinun()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCurrentColSort()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeErrors.aspx.cs" Line="539">'Modules_Errors_EmployeErrors.GetCurrentColSort()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMisparimIshiFromSession()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeErrors.aspx.cs" Line="441">In method 'Modules_Errors_EmployeErrors.GetMisparimIshiFromSession()', object 'dv' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dv' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeErrors.aspx.cs" Line="415">In method 'Modules_Errors_EmployeErrors.GetMisparimIshiFromSession()', call System.IDisposable.Dispose on object 'dtMisparim' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeErrors.aspx.cs" Line="447">'Modules_Errors_EmployeErrors.GetMisparimIshiFromSession()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#grdEmployee_RowDataBound(System.Object,System.Web.UI.WebControls.GridViewRowEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeErrors.aspx.cs" Line="499">In method 'Modules_Errors_EmployeErrors.grdEmployee_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeErrors.aspx.cs" Line="506">In method 'Modules_Errors_EmployeErrors.grdEmployee_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeErrors.aspx.cs" Line="492">In method 'Modules_Errors_EmployeErrors.grdEmployee_RowDataBound(object, GridViewRowEventArgs)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InsertMisparIshiToSession(System.Data.DataTable)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeErrors.aspx.cs" Line="477">'Modules_Errors_EmployeErrors.InsertMisparIshiToSession(DataTable)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadEzorim()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeErrors.aspx.cs" Line="126">'Modules_Errors_EmployeErrors.LoadEzorim()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadOvdimGrid(System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeErrors.aspx.cs" Line="357">In method 'Modules_Errors_EmployeErrors.LoadOvdimGrid(string, string)', object 'dv' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dv' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeErrors.aspx.cs" Line="326">In method 'Modules_Errors_EmployeErrors.LoadOvdimGrid(string, string)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeErrors.aspx.cs" Line="385">'Modules_Errors_EmployeErrors.LoadOvdimGrid(string, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SearchOvedInGrid()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeErrors.aspx.cs" Line="250">'Modules_Errors_EmployeErrors.SearchOvedInGrid()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetDatesDefaults()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeErrors.aspx.cs" Line="66">'Modules_Errors_EmployeErrors.SetDatesDefaults()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetFields()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Errors" File="EmployeErrors.aspx.cs" Line="101">'Modules_Errors_EmployeErrors.SetFields()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Documents and Settings\meravn\Local Settings\Temp\tmp83A.tmp.cadir\bin\App_Web_25cbvbte.dll">
   <Modules>
    <Module Name="app_web_25cbvbte.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Modules_Ovdim_EmployeTotalMonthly" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#btnCalc_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeTotalMonthly.aspx.cs" Line="647">In method 'Modules_Ovdim_EmployeTotalMonthly.btnCalc_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'dsRikuzAll' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeTotalMonthly.aspx.cs" Line="641">In method 'Modules_Ovdim_EmployeTotalMonthly.btnCalc_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'dtHeadrut' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeTotalMonthly.aspx.cs" Line="642">In method 'Modules_Ovdim_EmployeTotalMonthly.btnCalc_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'dtRechivimChodshiym' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeTotalMonthly.aspx.cs" Line="645">In method 'Modules_Ovdim_EmployeTotalMonthly.btnCalc_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'dtRikuz11To20' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeTotalMonthly.aspx.cs" Line="644">In method 'Modules_Ovdim_EmployeTotalMonthly.btnCalc_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'dtRikuz1To10' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeTotalMonthly.aspx.cs" Line="646">In method 'Modules_Ovdim_EmployeTotalMonthly.btnCalc_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'dtRikuz21To31' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateUser()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeTotalMonthly.aspx.cs" Line="44">'Modules_Ovdim_EmployeTotalMonthly.CreateUser()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRikuzChodshi(System.Single)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeTotalMonthly.aspx.cs" Line="464">In method 'Modules_Ovdim_EmployeTotalMonthly.GetRikuzChodshi(float)', call System.IDisposable.Dispose on object 'dtRikuz11To20' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeTotalMonthly.aspx.cs" Line="463">In method 'Modules_Ovdim_EmployeTotalMonthly.GetRikuzChodshi(float)', call System.IDisposable.Dispose on object 'dtRikuz1To10' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeTotalMonthly.aspx.cs" Line="465">In method 'Modules_Ovdim_EmployeTotalMonthly.GetRikuzChodshi(float)', call System.IDisposable.Dispose on object 'dtRikuz21To31' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ImagePrintClick_Click(System.Object,System.Web.UI.ImageClickEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeTotalMonthly.aspx.cs" Line="199">In method 'Modules_Ovdim_EmployeTotalMonthly.ImagePrintClick_Click(object, ImageClickEventArgs)', object 'fs' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fs' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Ovdim_HosafatKnisot" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatKnisot.aspx.cs" Line="98">'Modules_Ovdim_HosafatKnisot.Page_Load(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Ovdim_HosafatSidur" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BindGridPeiluyot()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="518">'Modules_Ovdim_HosafatSidur.BindGridPeiluyot()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BtIdkunGrid_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="673">In method 'Modules_Ovdim_HosafatSidur.BtIdkunGrid_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'dtSource' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="715">'Modules_Ovdim_HosafatSidur.BtIdkunGrid_Click(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnShow_OnClick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="133">In method 'Modules_Ovdim_HosafatSidur.btnShow_OnClick(object, EventArgs)', call System.IDisposable.Dispose on object 'dtSource' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="169">'Modules_Ovdim_HosafatSidur.btnShow_OnClick(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BuildSidurAndPeiluyotXml()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="912">In method 'Modules_Ovdim_HosafatSidur.BuildSidurAndPeiluyotXml()', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="962">'Modules_Ovdim_HosafatSidur.BuildSidurAndPeiluyotXml()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChashevKisuyTor(System.DateTime,System.String,System.String&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="1133">'Modules_Ovdim_HosafatSidur.ChashevKisuyTor(DateTime, string, ref string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getKisuyTorString(System.Int32,System.DateTime)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="329">'Modules_Ovdim_HosafatSidur.getKisuyTorString(int, DateTime)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getPratimLeMakat(System.Int64,System.Data.DataRow&amp;,System.Int32&amp;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="336">In method 'Modules_Ovdim_HosafatSidur.getPratimLeMakat(long, ref DataRow, ref int)', call System.IDisposable.Dispose on object 'dtMustElemnts' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="363">'Modules_Ovdim_HosafatSidur.getPratimLeMakat(long, ref DataRow, ref int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HosefNewPeiluyot(System.Data.DataTable&amp;,System.Data.DataTable)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="771">'Modules_Ovdim_HosafatSidur.HosefNewPeiluyot(ref DataTable, DataTable)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IdkunNetunim()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="1000">'Modules_Ovdim_HosafatSidur.IdkunNetunim()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeSidurMapa(System.Data.DataTable&amp;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="180">In method 'Modules_Ovdim_HosafatSidur.InitializeSidurMapa(ref DataTable)', call System.IDisposable.Dispose on object 'dsSidur' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="183">In method 'Modules_Ovdim_HosafatSidur.InitializeSidurMapa(ref DataTable)', call System.IDisposable.Dispose on object 'dtMeafyeneySidur' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="313">'Modules_Ovdim_HosafatSidur.InitializeSidurMapa(ref DataTable)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeSidurMeyucahd(System.Data.DataTable&amp;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="375">In method 'Modules_Ovdim_HosafatSidur.InitializeSidurMeyucahd(ref DataTable)', call System.IDisposable.Dispose on object 'dtArachim' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="372">In method 'Modules_Ovdim_HosafatSidur.InitializeSidurMeyucahd(ref DataTable)', call System.IDisposable.Dispose on object 'dtMustElemnts' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="457">'Modules_Ovdim_HosafatSidur.InitializeSidurMeyucahd(ref DataTable)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="81">In method 'Modules_Ovdim_HosafatSidur.Page_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'dtElements' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="80">In method 'Modules_Ovdim_HosafatSidur.Page_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'dtParametrim' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="82">In method 'Modules_Ovdim_HosafatSidur.Page_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'dtSidurimMeyuchadim' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetPirteyPeiluyot(KdsLibrary.UDT.COLL_OBJ_PEILUT_OVDIM&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="1064">In method 'Modules_Ovdim_HosafatSidur.SetPirteyPeiluyot(ref COLL_OBJ_PEILUT_OVDIM)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="1116">'Modules_Ovdim_HosafatSidur.SetPirteyPeiluyot(ref COLL_OBJ_PEILUT_OVDIM)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetPirteySidur(KdsLibrary.UDT.COLL_SIDURIM_OVDIM&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatSidur.aspx.cs" Line="1054">'Modules_Ovdim_HosafatSidur.SetPirteySidur(ref COLL_SIDURIM_OVDIM)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Ovdim_MadknAcharon" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="MadknAcharon.aspx.cs" Line="45">'Modules_Ovdim_MadknAcharon.Page_Load(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Ovdim_TickurChishuvLeOved" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#btnCalc_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="TickurChishuvLeOved.aspx.cs" Line="667">In method 'Modules_Ovdim_TickurChishuvLeOved.btnCalc_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'dsRikuz' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="TickurChishuvLeOved.aspx.cs" Line="666">In method 'Modules_Ovdim_TickurChishuvLeOved.btnCalc_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'dtAllRikuz' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="TickurChishuvLeOved.aspx.cs" Line="660">In method 'Modules_Ovdim_TickurChishuvLeOved.btnCalc_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'dtHeadrut' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="TickurChishuvLeOved.aspx.cs" Line="661">In method 'Modules_Ovdim_TickurChishuvLeOved.btnCalc_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'dtRechivimChodshiym' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="TickurChishuvLeOved.aspx.cs" Line="664">In method 'Modules_Ovdim_TickurChishuvLeOved.btnCalc_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'dtRikuz11To20' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="TickurChishuvLeOved.aspx.cs" Line="663">In method 'Modules_Ovdim_TickurChishuvLeOved.btnCalc_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'dtRikuz1To10' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="TickurChishuvLeOved.aspx.cs" Line="665">In method 'Modules_Ovdim_TickurChishuvLeOved.btnCalc_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'dtRikuz21To31' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnInputData_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="TickurChishuvLeOved.aspx.cs" Line="262">'Modules_Ovdim_TickurChishuvLeOved.btnInputData_Click(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRikuzChodshi(System.Single)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="TickurChishuvLeOved.aspx.cs" Line="479">In method 'Modules_Ovdim_TickurChishuvLeOved.GetRikuzChodshi(float)', call System.IDisposable.Dispose on object 'dtRikuz11To20' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="TickurChishuvLeOved.aspx.cs" Line="478">In method 'Modules_Ovdim_TickurChishuvLeOved.GetRikuzChodshi(float)', call System.IDisposable.Dispose on object 'dtRikuz1To10' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="TickurChishuvLeOved.aspx.cs" Line="480">In method 'Modules_Ovdim_TickurChishuvLeOved.GetRikuzChodshi(float)', call System.IDisposable.Dispose on object 'dtRikuz21To31' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Ovdim_WorkCardErrors" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetTableFromCache(System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCardErrors.aspx.cs" Line="104">In method 'Modules_Ovdim_WorkCardErrors.GetTableFromCache(string, string)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Ovdim_ZmaniNesiot" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="ZmaniNesiot.aspx.cs" Line="105">'Modules_Ovdim_ZmaniNesiot.Page_Load(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="ZmaniNesiot.aspx.cs" Line="134">'Modules_Ovdim_ZmaniNesiot.Page_Load(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateDB()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="ZmaniNesiot.aspx.cs" Line="301">'Modules_Ovdim_ZmaniNesiot.UpdateDB()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ZmanMistane61Kod1(System.Int32,System.DateTime,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="ZmaniNesiot.aspx.cs" Line="164">'Modules_Ovdim_ZmaniNesiot.ZmanMistane61Kod1(int, DateTime, int, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="ZmaniNesiot.aspx.cs" Line="178">'Modules_Ovdim_ZmaniNesiot.ZmanMistane61Kod1(int, DateTime, int, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="ZmaniNesiot.aspx.cs" Line="193">'Modules_Ovdim_ZmaniNesiot.ZmanMistane61Kod1(int, DateTime, int, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ZmanMistane61Kod2(System.Int32,System.DateTime,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="ZmaniNesiot.aspx.cs" Line="214">'Modules_Ovdim_ZmaniNesiot.ZmanMistane61Kod2(int, DateTime, int, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="ZmaniNesiot.aspx.cs" Line="227">'Modules_Ovdim_ZmaniNesiot.ZmanMistane61Kod2(int, DateTime, int, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="ZmaniNesiot.aspx.cs" Line="243">'Modules_Ovdim_ZmaniNesiot.ZmanMistane61Kod2(int, DateTime, int, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Documents and Settings\meravn\Local Settings\Temp\tmp83A.tmp.cadir\bin\App_Web_4oacxagt.dll">
   <Modules>
    <Module Name="app_web_4oacxagt.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Modules_Approvals_Test" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#btnHR_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Approvals" File="TestApprovals.aspx.cs" Line="53">In method 'Modules_Approvals_Test.btnHR_Click(object, EventArgs)', object 'lblTitle' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lblTitle' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Approvals" File="TestApprovals.aspx.cs" Line="71">In method 'Modules_Approvals_Test.btnHR_Click(object, EventArgs)', object 'lblTitle' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lblTitle' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Documents and Settings\meravn\Local Settings\Temp\tmp83A.tmp.cadir\bin\App_Web_a4yzxx0m.dll">
   <Modules>
    <Module Name="app_web_a4yzxx0m.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Modules_Ovdim_BakashatTashlum" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="ApprovalMonthlyQuota.aspx.cs" Line="27">'Modules_Ovdim_BakashatTashlum.Page_Load(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Ovdim_DivuachHeadrut" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CheckChafifa()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="DivuachHeadrut.aspx.cs" Line="311">'Modules_Ovdim_DivuachHeadrut.CheckChafifa()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitData()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="DivuachHeadrut.aspx.cs" Line="120">In method 'Modules_Ovdim_DivuachHeadrut.InitData()', call System.IDisposable.Dispose on object 'dtHeadrutTypeNew' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="DivuachHeadrut.aspx.cs" Line="134">'Modules_Ovdim_DivuachHeadrut.InitData()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="DivuachHeadrut.aspx.cs" Line="93">'Modules_Ovdim_DivuachHeadrut.Page_Load(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Ovdim_EmployeeCards" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateUser()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeeCards.aspx.cs" Line="42">'Modules_Ovdim_EmployeeCards.CreateUser()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCurrentColSort()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeeCards.aspx.cs" Line="581">'Modules_Ovdim_EmployeeCards.GetCurrentColSort()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#grdEmployee_RowDataBound(System.Object,System.Web.UI.WebControls.GridViewRowEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeeCards.aspx.cs" Line="502">In method 'Modules_Ovdim_EmployeeCards.grdEmployee_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeeCards.aspx.cs" Line="509">In method 'Modules_Ovdim_EmployeeCards.grdEmployee_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeeCards.aspx.cs" Line="495">In method 'Modules_Ovdim_EmployeeCards.grdEmployee_RowDataBound(object, GridViewRowEventArgs)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeeCards.aspx.cs" Line="550">'Modules_Ovdim_EmployeeCards.grdEmployee_RowDataBound(object, GridViewRowEventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetEmployeeName()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeeCards.aspx.cs" Line="325">'Modules_Ovdim_EmployeeCards.SetEmployeeName()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetSnifName(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeeCards.aspx.cs" Line="306">'Modules_Ovdim_EmployeeCards.SetSnifName(int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowCards(System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeeCards.aspx.cs" Line="425">In method 'Modules_Ovdim_EmployeeCards.ShowCards(string, string)', object 'dv' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dv' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeeCards.aspx.cs" Line="439">'Modules_Ovdim_EmployeeCards.ShowCards(string, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Ovdim_EmployeePremias" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetCurrentColSort()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeePremias.aspx.cs" Line="741">'Modules_Ovdim_EmployeePremias.GetCurrentColSort()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#grdPremias_RowDataBound(System.Object,System.Web.UI.WebControls.GridViewRowEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeePremias.aspx.cs" Line="263">In method 'Modules_Ovdim_EmployeePremias.grdPremias_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeePremias.aspx.cs" Line="270">In method 'Modules_Ovdim_EmployeePremias.grdPremias_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeePremias.aspx.cs" Line="256">In method 'Modules_Ovdim_EmployeePremias.grdPremias_RowDataBound(object, GridViewRowEventArgs)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#grdPremias_Sorting(System.Object,System.Web.UI.WebControls.GridViewSortEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeePremias.aspx.cs" Line="692">In method 'Modules_Ovdim_EmployeePremias.grdPremias_Sorting(object, GridViewSortEventArgs)', object 'dv' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dv' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeePremias.aspx.cs" Line="323">In method 'Modules_Ovdim_EmployeePremias.Page_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'exchangeSrv' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RefreshData()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeePremias.aspx.cs" Line="490">In method 'Modules_Ovdim_EmployeePremias.RefreshData()', object 'dtOvdim' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dtOvdim' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="EmployeePremias.aspx.cs" Line="542">In method 'Modules_Ovdim_EmployeePremias.RefreshData()', object 'dv' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dv' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Ovdim_HosafatPeiluyot" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#btnAddElement_OnClick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatPeiluyot.aspx.cs" Line="237">'Modules_Ovdim_HosafatPeiluyot.btnAddElement_OnClick(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnAddNesia_OnClick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatPeiluyot.aspx.cs" Line="247">In method 'Modules_Ovdim_HosafatPeiluyot.btnAddNesia_OnClick(object, EventArgs)', call System.IDisposable.Dispose on object 'dsKavim' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatPeiluyot.aspx.cs" Line="307">'Modules_Ovdim_HosafatPeiluyot.btnAddNesia_OnClick(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BuildDtPeiluyot()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatPeiluyot.aspx.cs" Line="162">In method 'Modules_Ovdim_HosafatPeiluyot.BuildDtPeiluyot()', object 'dtSource' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dtSource' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsPeilutAlreadyExist(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatPeiluyot.aspx.cs" Line="770">'Modules_Ovdim_HosafatPeiluyot.IsPeilutAlreadyExist(string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatPeiluyot.aspx.cs" Line="42">In method 'Modules_Ovdim_HosafatPeiluyot.Page_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'dtElements' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatPeiluyot.aspx.cs" Line="44">In method 'Modules_Ovdim_HosafatPeiluyot.Page_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'dtParametrim' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatPeiluyot.aspx.cs" Line="154">'Modules_Ovdim_HosafatPeiluyot.Page_Load(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#setNetuneyEmpty(System.Data.DataTable&amp;,System.Data.DataTable)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatPeiluyot.aspx.cs" Line="486">'Modules_Ovdim_HosafatPeiluyot.setNetuneyEmpty(ref DataTable, DataTable)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#setNetuneyKavShirut(System.Data.DataTable&amp;,System.Data.DataSet)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatPeiluyot.aspx.cs" Line="422">'Modules_Ovdim_HosafatPeiluyot.setNetuneyKavShirut(ref DataTable, DataSet)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#setNetuneyNamak(System.Data.DataTable&amp;,System.Data.DataTable)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatPeiluyot.aspx.cs" Line="455">'Modules_Ovdim_HosafatPeiluyot.setNetuneyNamak(ref DataTable, DataTable)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Ovdim_NetuneyOvedModal" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ShowData()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="NetuneyOvedModal.aspx.cs" Line="116">'Modules_Ovdim_NetuneyOvedModal.ShowData()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Ovdim_SadotNosafimLeSidur" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#btnShmor_OnClick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1026">'Modules_Ovdim_SadotNosafimLeSidur.btnShmor_OnClick(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BuildObjectPeilut(System.Web.UI.HtmlControls.HtmlTableCell&amp;,System.Data.DataRow,System.Data.DataRow,System.Int32,System.Web.UI.HtmlControls.HtmlImage&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="938">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildObjectPeilut(ref HtmlTableCell, DataRow, DataRow, int, ref HtmlImage)', call System.IDisposable.Dispose on object 'cmb' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="939">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildObjectPeilut(ref HtmlTableCell, DataRow, DataRow, int, ref HtmlImage)', call System.IDisposable.Dispose on object 'txt' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="940">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildObjectPeilut(ref HtmlTableCell, DataRow, DataRow, int, ref HtmlImage)', call System.IDisposable.Dispose on object 'vldCustomValidator' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="941">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildObjectPeilut(ref HtmlTableCell, DataRow, DataRow, int, ref HtmlImage)', call System.IDisposable.Dispose on object 'vldExtenderCallOut' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="999">'Modules_Ovdim_SadotNosafimLeSidur.BuildObjectPeilut(ref HtmlTableCell, DataRow, DataRow, int, ref HtmlImage)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BuildObjectSidur(System.Web.UI.HtmlControls.HtmlTableCell&amp;,System.Data.DataRow,System.Data.DataRow,System.Web.UI.HtmlControls.HtmlImage&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="389">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildObjectSidur(ref HtmlTableCell, DataRow, DataRow, ref HtmlImage)', call System.IDisposable.Dispose on object 'cmb' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="390">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildObjectSidur(ref HtmlTableCell, DataRow, DataRow, ref HtmlImage)', call System.IDisposable.Dispose on object 'txt' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="391">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildObjectSidur(ref HtmlTableCell, DataRow, DataRow, ref HtmlImage)', call System.IDisposable.Dispose on object 'vldCustomValidator' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="392">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildObjectSidur(ref HtmlTableCell, DataRow, DataRow, ref HtmlImage)', call System.IDisposable.Dispose on object 'vldExtenderCallOut' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="553">'Modules_Ovdim_SadotNosafimLeSidur.BuildObjectSidur(ref HtmlTableCell, DataRow, DataRow, ref HtmlImage)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BuildPeiluyot()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="810">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildPeiluyot()', object 'oTblP' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'oTblP' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="813">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildPeiluyot()', call System.IDisposable.Dispose on object 'dtPeiluyot' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="812">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildPeiluyot()', call System.IDisposable.Dispose on object 'dtSadotNosafimLePeilut' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="811">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildPeiluyot()', call System.IDisposable.Dispose on object 'oTrP' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="854">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildPeiluyot()', call System.IDisposable.Dispose on object 'oTrP' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="870">'Modules_Ovdim_SadotNosafimLeSidur.BuildPeiluyot()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BuildPirteySidur()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="311">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildPirteySidur()', call System.IDisposable.Dispose on object 'dtSadotKayamim' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="309">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildPirteySidur()', call System.IDisposable.Dispose on object 'dtSadotNosafimLesidur' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="307">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildPirteySidur()', call System.IDisposable.Dispose on object 'oTbl' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="308">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildPirteySidur()', call System.IDisposable.Dispose on object 'oTr' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="327">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildPirteySidur()', call System.IDisposable.Dispose on object 'oTr' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="344">'Modules_Ovdim_SadotNosafimLeSidur.BuildPirteySidur()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BuildRowPeilut(System.Web.UI.HtmlControls.HtmlTableRow&amp;,System.Data.DataRow,System.Data.DataRow,System.Int32,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="878">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildRowPeilut(ref HtmlTableRow, DataRow, DataRow, int, bool)', object 'oCellImg' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'oCellImg' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="879">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildRowPeilut(ref HtmlTableRow, DataRow, DataRow, int, bool)', call System.IDisposable.Dispose on object 'imgErr' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="877">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildRowPeilut(ref HtmlTableRow, DataRow, DataRow, int, bool)', call System.IDisposable.Dispose on object 'oCell' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="890">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildRowPeilut(ref HtmlTableRow, DataRow, DataRow, int, bool)', call System.IDisposable.Dispose on object 'oCell' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="894">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildRowPeilut(ref HtmlTableRow, DataRow, DataRow, int, bool)', call System.IDisposable.Dispose on object 'oCell' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="900">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildRowPeilut(ref HtmlTableRow, DataRow, DataRow, int, bool)', call System.IDisposable.Dispose on object 'oCell' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="904">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildRowPeilut(ref HtmlTableRow, DataRow, DataRow, int, bool)', call System.IDisposable.Dispose on object 'oCell' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="910">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildRowPeilut(ref HtmlTableRow, DataRow, DataRow, int, bool)', call System.IDisposable.Dispose on object 'oCell' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="914">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildRowPeilut(ref HtmlTableRow, DataRow, DataRow, int, bool)', call System.IDisposable.Dispose on object 'oCell' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="919">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildRowPeilut(ref HtmlTableRow, DataRow, DataRow, int, bool)', call System.IDisposable.Dispose on object 'oCell' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="929">'Modules_Ovdim_SadotNosafimLeSidur.BuildRowPeilut(ref HtmlTableRow, DataRow, DataRow, int, bool)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BuildRowSidur(System.Web.UI.HtmlControls.HtmlTableRow&amp;,System.Data.DataRow,System.Data.DataRow)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="353">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildRowSidur(ref HtmlTableRow, DataRow, DataRow)', object 'oCellImg' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'oCellImg' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="354">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildRowSidur(ref HtmlTableRow, DataRow, DataRow)', call System.IDisposable.Dispose on object 'imgErr' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="352">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildRowSidur(ref HtmlTableRow, DataRow, DataRow)', call System.IDisposable.Dispose on object 'oCell' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="365">In method 'Modules_Ovdim_SadotNosafimLeSidur.BuildRowSidur(ref HtmlTableRow, DataRow, DataRow)', call System.IDisposable.Dispose on object 'oCell' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="377">'Modules_Ovdim_SadotNosafimLeSidur.BuildRowSidur(ref HtmlTableRow, DataRow, DataRow)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BulidObjectCmb(System.Web.UI.WebControls.DropDownList&amp;,System.Data.DataRow)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="611">In method 'Modules_Ovdim_SadotNosafimLeSidur.BulidObjectCmb(ref DropDownList, DataRow)', call System.IDisposable.Dispose on object 'Dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="636">'Modules_Ovdim_SadotNosafimLeSidur.BulidObjectCmb(ref DropDownList, DataRow)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BulidObjectTextBox(System.Web.UI.WebControls.TextBox&amp;,System.Data.DataRow)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="700">In method 'Modules_Ovdim_SadotNosafimLeSidur.BulidObjectTextBox(ref TextBox, DataRow)', call System.IDisposable.Dispose on object 'oVldRequired' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="715">'Modules_Ovdim_SadotNosafimLeSidur.BulidObjectTextBox(ref TextBox, DataRow)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#cheackEilatTrip(System.Data.DataTable&amp;,System.Data.DataTable)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="250">'Modules_Ovdim_SadotNosafimLeSidur.cheackEilatTrip(ref DataTable, DataTable)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckKavSherut(System.Int32,System.Boolean&amp;,System.Int32&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="260">In method 'Modules_Ovdim_SadotNosafimLeSidur.CheckKavSherut(int, out bool, out int)', call System.IDisposable.Dispose on object 'dtKavim' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="299">'Modules_Ovdim_SadotNosafimLeSidur.CheckKavSherut(int, out bool, out int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#checkMaximumKMLesidur(System.Data.DataRow,System.Web.UI.WebControls.TextBox&amp;,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="658">In method 'Modules_Ovdim_SadotNosafimLeSidur.checkMaximumKMLesidur(DataRow, ref TextBox, string)', call System.IDisposable.Dispose on object 'dtPeiluyot' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="693">'Modules_Ovdim_SadotNosafimLeSidur.checkMaximumKMLesidur(DataRow, ref TextBox, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#checkTkinutPeilutFields()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1089">In method 'Modules_Ovdim_SadotNosafimLeSidur.checkTkinutPeilutFields()', call System.IDisposable.Dispose on object 'cmb' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1087">In method 'Modules_Ovdim_SadotNosafimLeSidur.checkTkinutPeilutFields()', call System.IDisposable.Dispose on object 'dtPeiluyot' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1086">In method 'Modules_Ovdim_SadotNosafimLeSidur.checkTkinutPeilutFields()', call System.IDisposable.Dispose on object 'dtSadotNosafim' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1092">In method 'Modules_Ovdim_SadotNosafimLeSidur.checkTkinutPeilutFields()', call System.IDisposable.Dispose on object 'oTbl' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1090">In method 'Modules_Ovdim_SadotNosafimLeSidur.checkTkinutPeilutFields()', call System.IDisposable.Dispose on object 'txt' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1088">In method 'Modules_Ovdim_SadotNosafimLeSidur.checkTkinutPeilutFields()', call System.IDisposable.Dispose on object 'vld' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1131">'Modules_Ovdim_SadotNosafimLeSidur.checkTkinutPeilutFields()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#checkTkinutSidurFields()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1036">In method 'Modules_Ovdim_SadotNosafimLeSidur.checkTkinutSidurFields()', call System.IDisposable.Dispose on object 'cmb' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1034">In method 'Modules_Ovdim_SadotNosafimLeSidur.checkTkinutSidurFields()', call System.IDisposable.Dispose on object 'dtSadotNosafim' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1039">In method 'Modules_Ovdim_SadotNosafimLeSidur.checkTkinutSidurFields()', call System.IDisposable.Dispose on object 'oTbl' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1037">In method 'Modules_Ovdim_SadotNosafimLeSidur.checkTkinutSidurFields()', call System.IDisposable.Dispose on object 'txt' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1035">In method 'Modules_Ovdim_SadotNosafimLeSidur.checkTkinutSidurFields()', call System.IDisposable.Dispose on object 'vld' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1078">'Modules_Ovdim_SadotNosafimLeSidur.checkTkinutSidurFields()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#checkValidCmb(System.Web.UI.WebControls.DropDownList,System.Web.UI.WebControls.CustomValidator&amp;,System.Data.DataRow)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1148">'Modules_Ovdim_SadotNosafimLeSidur.checkValidCmb(DropDownList, ref CustomValidator, DataRow)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#checkValidTxt(System.Web.UI.WebControls.TextBox,System.Web.UI.WebControls.CustomValidator&amp;,System.Data.DataRow)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1204">'Modules_Ovdim_SadotNosafimLeSidur.checkValidTxt(TextBox, ref CustomValidator, DataRow)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#fill_Kod_shinuy_premia(System.Web.UI.WebControls.DropDownList&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="739">In method 'Modules_Ovdim_SadotNosafimLeSidur.fill_Kod_shinuy_premia(ref DropDownList)', object 'Dt' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'Dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="765">'Modules_Ovdim_SadotNosafimLeSidur.fill_Kod_shinuy_premia(ref DropDownList)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Fill_Mispar_Musach_O_Machsan(System.Web.UI.WebControls.DropDownList&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="723">In method 'Modules_Ovdim_SadotNosafimLeSidur.Fill_Mispar_Musach_O_Machsan(ref DropDownList)', call System.IDisposable.Dispose on object 'Dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="732">'Modules_Ovdim_SadotNosafimLeSidur.Fill_Mispar_Musach_O_Machsan(ref DropDownList)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#fill_tafkid_viza(System.Web.UI.WebControls.DropDownList&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="772">In method 'Modules_Ovdim_SadotNosafimLeSidur.fill_tafkid_viza(ref DropDownList)', object 'Dt' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'Dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="803">'Modules_Ovdim_SadotNosafimLeSidur.fill_tafkid_viza(ref DropDownList)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getDefaultFieldFromPeiluyot(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="562">In method 'Modules_Ovdim_SadotNosafimLeSidur.getDefaultFieldFromPeiluyot(string)', call System.IDisposable.Dispose on object 'dtPeiluyot' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="603">'Modules_Ovdim_SadotNosafimLeSidur.getDefaultFieldFromPeiluyot(string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getMeafyenimSadotNosafimLesidurMeyuchad(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="156">In method 'Modules_Ovdim_SadotNosafimLeSidur.getMeafyenimSadotNosafimLesidurMeyuchad(string, int)', call System.IDisposable.Dispose on object 'dtMeafyenim' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="169">'Modules_Ovdim_SadotNosafimLeSidur.getMeafyenimSadotNosafimLesidurMeyuchad(string, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getMeafyenimSadotNosafimLesidurRagil(System.DateTime,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="177">In method 'Modules_Ovdim_SadotNosafimLeSidur.getMeafyenimSadotNosafimLesidurRagil(DateTime, int)', call System.IDisposable.Dispose on object 'dsSidur' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="176">In method 'Modules_Ovdim_SadotNosafimLeSidur.getMeafyenimSadotNosafimLesidurRagil(DateTime, int)', call System.IDisposable.Dispose on object 'dtMeafyenim' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="208">'Modules_Ovdim_SadotNosafimLeSidur.getMeafyenimSadotNosafimLesidurRagil(DateTime, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HachnasatSdotPeilutBeramatSidur(KdsLibrary.UDT.OBJ_PEILUT_OVDIM&amp;,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1497">In method 'Modules_Ovdim_SadotNosafimLeSidur.HachnasatSdotPeilutBeramatSidur(ref OBJ_PEILUT_OVDIM, int)', call System.IDisposable.Dispose on object 'oTbl' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1496">In method 'Modules_Ovdim_SadotNosafimLeSidur.HachnasatSdotPeilutBeramatSidur(ref OBJ_PEILUT_OVDIM, int)', call System.IDisposable.Dispose on object 'txt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1525">'Modules_Ovdim_SadotNosafimLeSidur.HachnasatSdotPeilutBeramatSidur(ref OBJ_PEILUT_OVDIM, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="52">In method 'Modules_Ovdim_SadotNosafimLeSidur.Page_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'dtMeafyenim' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="50">In method 'Modules_Ovdim_SadotNosafimLeSidur.Page_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'dtParametrim' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="51">In method 'Modules_Ovdim_SadotNosafimLeSidur.Page_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'dtPeiluyotLesidur' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="49">In method 'Modules_Ovdim_SadotNosafimLeSidur.Page_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'dtSadotNosafimLePeilut' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="48">In method 'Modules_Ovdim_SadotNosafimLeSidur.Page_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'dtSadotNosafimLesidur' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="114">'Modules_Ovdim_SadotNosafimLeSidur.Page_Load(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SavePirteyYemeyAvoda(KdsLibrary.UDT.COLL_YAMEY_AVODA_OVDIM&amp;,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1545">'Modules_Ovdim_SadotNosafimLeSidur.SavePirteyYemeyAvoda(ref COLL_YAMEY_AVODA_OVDIM, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#setObjectPeilut(KdsLibrary.UDT.COLL_OBJ_PEILUT_OVDIM&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1392">In method 'Modules_Ovdim_SadotNosafimLeSidur.setObjectPeilut(ref COLL_OBJ_PEILUT_OVDIM)', call System.IDisposable.Dispose on object 'cmb' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1395">In method 'Modules_Ovdim_SadotNosafimLeSidur.setObjectPeilut(ref COLL_OBJ_PEILUT_OVDIM)', call System.IDisposable.Dispose on object 'dtPeiluyot' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1389">In method 'Modules_Ovdim_SadotNosafimLeSidur.setObjectPeilut(ref COLL_OBJ_PEILUT_OVDIM)', call System.IDisposable.Dispose on object 'dtSadotNosafim' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1394">In method 'Modules_Ovdim_SadotNosafimLeSidur.setObjectPeilut(ref COLL_OBJ_PEILUT_OVDIM)', call System.IDisposable.Dispose on object 'oTbl' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1393">In method 'Modules_Ovdim_SadotNosafimLeSidur.setObjectPeilut(ref COLL_OBJ_PEILUT_OVDIM)', call System.IDisposable.Dispose on object 'txt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1487">'Modules_Ovdim_SadotNosafimLeSidur.setObjectPeilut(ref COLL_OBJ_PEILUT_OVDIM)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#setObjectSidur(KdsLibrary.UDT.COLL_SIDURIM_OVDIM&amp;,KdsLibrary.UDT.COLL_YAMEY_AVODA_OVDIM&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1213">In method 'Modules_Ovdim_SadotNosafimLeSidur.setObjectSidur(ref COLL_SIDURIM_OVDIM, ref COLL_YAMEY_AVODA_OVDIM)', call System.IDisposable.Dispose on object 'cmb' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1211">In method 'Modules_Ovdim_SadotNosafimLeSidur.setObjectSidur(ref COLL_SIDURIM_OVDIM, ref COLL_YAMEY_AVODA_OVDIM)', call System.IDisposable.Dispose on object 'dtSadotNosafim' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1215">In method 'Modules_Ovdim_SadotNosafimLeSidur.setObjectSidur(ref COLL_SIDURIM_OVDIM, ref COLL_YAMEY_AVODA_OVDIM)', call System.IDisposable.Dispose on object 'oTbl' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1214">In method 'Modules_Ovdim_SadotNosafimLeSidur.setObjectSidur(ref COLL_SIDURIM_OVDIM, ref COLL_YAMEY_AVODA_OVDIM)', call System.IDisposable.Dispose on object 'txt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1381">'Modules_Ovdim_SadotNosafimLeSidur.setObjectSidur(ref COLL_SIDURIM_OVDIM, ref COLL_YAMEY_AVODA_OVDIM)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetOneError(System.Web.UI.Control,System.Web.UI.HtmlControls.HtmlTableCell,System.Int32,System.DateTime,System.Int32,System.DateTime,System.DateTime,System.Int32,System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1586">In method 'Modules_Ovdim_SadotNosafimLeSidur.SetOneError(Control, HtmlTableCell, int, DateTime, int, DateTime, DateTime, int, string, string)', call System.IDisposable.Dispose on object 'dvFieldsErrors' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetOneError(System.Web.UI.Control,System.Web.UI.HtmlControls.HtmlTableCell,System.String,KdsBatch.clSidur&amp;,System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="1562">In method 'Modules_Ovdim_SadotNosafimLeSidur.SetOneError(Control, HtmlTableCell, string, ref clSidur, string, string)', call System.IDisposable.Dispose on object 'dvFieldsErrors' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SlifatQueryString()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="SadotNosafimLeSidur.aspx.cs" Line="149">'Modules_Ovdim_SadotNosafimLeSidur.SlifatQueryString()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Documents and Settings\meravn\Local Settings\Temp\tmp83A.tmp.cadir\bin\App_Web_eblxc3iv.dll">
   <Modules>
    <Module Name="app_web_eblxc3iv.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Modules_UserControl_ucSidurim" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddAlwaysVisibleControlExtender(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3476">In method 'Modules_UserControl_ucSidurim.AddAlwaysVisibleControlExtender(string)', object 'oAlwaysVisibleControl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'oAlwaysVisibleControl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddCallOutValidator(System.String,System.String,System.String,AjaxControlToolkit.ValidatorCalloutPosition)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="4357">In method 'Modules_UserControl_ucSidurim.AddCallOutValidator(string, string, string, ValidatorCalloutPosition)', object 'vldExKisuyTor' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'vldExKisuyTor' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddCustomValidator(System.String,System.String,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="4401">In method 'Modules_UserControl_ucSidurim.AddCustomValidator(string, string, string, string, string)', object 'vldCustomValidator' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'vldCustomValidator' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddCustomValidator(System.String,System.String,System.String,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="4374">In method 'Modules_UserControl_ucSidurim.AddCustomValidator(string, string, string, string, string, string)', object 'vldCustomValidator' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'vldCustomValidator' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddDiv(System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="596">In method 'Modules_UserControl_ucSidurim.AddDiv(int)', object 'dynDiv' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dynDiv' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddFilterTextBoxExtender(System.String,System.String,System.String,AjaxControlToolkit.FilterModes,AjaxControlToolkit.FilterTypes,System.Web.UI.WebControls.GridViewRowEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="4343">In method 'Modules_UserControl_ucSidurim.AddFilterTextBoxExtender(string, string, string, FilterModes, FilterTypes, GridViewRowEventArgs)', object 'oFilterTextBox' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'oFilterTextBox' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddHyperLink(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1312">In method 'Modules_UserControl_ucSidurim.AddHyperLink(string, string, string)', object 'lnkSidur' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lnkSidur' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddImage(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1303">In method 'Modules_UserControl_ucSidurim.AddImage(string, string, string)', object 'imgCollapse' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'imgCollapse' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddImageButton()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="619">In method 'Modules_UserControl_ucSidurim.AddImageButton()', object 'oImage' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'oImage' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddInputButton(System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3680">In method 'Modules_UserControl_ucSidurim.AddInputButton(string, string)', object '_Button' is not disposed along all exception paths. Call System.IDisposable.Dispose on object '_Button' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3692">'Modules_UserControl_ucSidurim.AddInputButton(string, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddLabel(System.String,System.String,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1322">In method 'Modules_UserControl_ucSidurim.AddLabel(string, string, string, int)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddRegularExpressionValidator(System.String,System.String,System.String,System.Web.UI.WebControls.GridViewRowEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="4327">In method 'Modules_UserControl_ucSidurim.AddRegularExpressionValidator(string, string, string, GridViewRowEventArgs)', object 'oValidator' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'oValidator' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddRoundedCorner(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="655">In method 'Modules_UserControl_ucSidurim.AddRoundedCorner(string)', object 'RoundCorner' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'RoundCorner' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddTimeMaskedEditExtender(System.String,System.Int32,System.String,System.String,AjaxControlToolkit.MaskedEditType,AjaxControlToolkit.MaskedEditShowSymbol)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="630">In method 'Modules_UserControl_ucSidurim.AddTimeMaskedEditExtender(string, int, string, string, MaskedEditType, MaskedEditShowSymbol)', object 'oMaskTextBox' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'oMaskTextBox' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="647">'Modules_UserControl_ucSidurim.AddTimeMaskedEditExtender(string, int, string, string, MaskedEditType, MaskedEditShowSymbol)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddUpdatePanel()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="583">In method 'Modules_UserControl_ucSidurim.AddUpdatePanel()', object 'upPeilyot' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'upPeilyot' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BuildDataTableColumns(System.Data.DataTable&amp;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="856">In method 'Modules_UserControl_ucSidurim.BuildDataTableColumns(ref DataTable)', object 'dcPeilut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcPeilut' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="861">In method 'Modules_UserControl_ucSidurim.BuildDataTableColumns(ref DataTable)', object 'dcPeilut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcPeilut' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="866">In method 'Modules_UserControl_ucSidurim.BuildDataTableColumns(ref DataTable)', object 'dcPeilut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcPeilut' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="871">In method 'Modules_UserControl_ucSidurim.BuildDataTableColumns(ref DataTable)', object 'dcPeilut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcPeilut' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="876">In method 'Modules_UserControl_ucSidurim.BuildDataTableColumns(ref DataTable)', object 'dcPeilut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcPeilut' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="881">In method 'Modules_UserControl_ucSidurim.BuildDataTableColumns(ref DataTable)', object 'dcPeilut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcPeilut' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="886">In method 'Modules_UserControl_ucSidurim.BuildDataTableColumns(ref DataTable)', object 'dcPeilut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcPeilut' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="891">In method 'Modules_UserControl_ucSidurim.BuildDataTableColumns(ref DataTable)', object 'dcPeilut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcPeilut' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="896">In method 'Modules_UserControl_ucSidurim.BuildDataTableColumns(ref DataTable)', object 'dcPeilut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcPeilut' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="901">In method 'Modules_UserControl_ucSidurim.BuildDataTableColumns(ref DataTable)', object 'dcPeilut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcPeilut' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="906">In method 'Modules_UserControl_ucSidurim.BuildDataTableColumns(ref DataTable)', object 'dcPeilut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcPeilut' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="911">In method 'Modules_UserControl_ucSidurim.BuildDataTableColumns(ref DataTable)', object 'dcPeilut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcPeilut' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="916">In method 'Modules_UserControl_ucSidurim.BuildDataTableColumns(ref DataTable)', object 'dcPeilut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcPeilut' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="921">In method 'Modules_UserControl_ucSidurim.BuildDataTableColumns(ref DataTable)', object 'dcPeilut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcPeilut' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="926">In method 'Modules_UserControl_ucSidurim.BuildDataTableColumns(ref DataTable)', object 'dcPeilut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcPeilut' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="931">In method 'Modules_UserControl_ucSidurim.BuildDataTableColumns(ref DataTable)', object 'dcPeilut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcPeilut' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="936">In method 'Modules_UserControl_ucSidurim.BuildDataTableColumns(ref DataTable)', object 'dcPeilut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcPeilut' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="941">In method 'Modules_UserControl_ucSidurim.BuildDataTableColumns(ref DataTable)', object 'dcPeilut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcPeilut' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="946">In method 'Modules_UserControl_ucSidurim.BuildDataTableColumns(ref DataTable)', object 'dcPeilut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcPeilut' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="951">In method 'Modules_UserControl_ucSidurim.BuildDataTableColumns(ref DataTable)', object 'dcPeilut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcPeilut' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="956">In method 'Modules_UserControl_ucSidurim.BuildDataTableColumns(ref DataTable)', object 'dcPeilut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcPeilut' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="962">In method 'Modules_UserControl_ucSidurim.BuildDataTableColumns(ref DataTable)', object 'dcPeilut' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcPeilut' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BuildHashlamaDLL(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1598">In method 'Modules_UserControl_ucSidurim.BuildHashlamaDLL(bool)', object 'ddl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ddl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BuildOneSidur(System.Collections.Specialized.OrderedDictionary&amp;,KdsBatch.clSidur,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="2166">In method 'Modules_UserControl_ucSidurim.BuildOneSidur(ref OrderedDictionary, clSidur, int)', object 'hRow' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'hRow' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="2165">In method 'Modules_UserControl_ucSidurim.BuildOneSidur(ref OrderedDictionary, clSidur, int)', object 'hTable' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'hTable' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="2167">In method 'Modules_UserControl_ucSidurim.BuildOneSidur(ref OrderedDictionary, clSidur, int)', call System.IDisposable.Dispose on object 'hCell' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="2303">'Modules_UserControl_ucSidurim.BuildOneSidur(ref OrderedDictionary, clSidur, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BuildPage()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="176">'Modules_UserControl_ucSidurim.BuildPage()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BuildSidurAndPeiluyot(System.Collections.Specialized.OrderedDictionary&amp;,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="487">In method 'Modules_UserControl_ucSidurim.BuildSidurAndPeiluyot(ref OrderedDictionary, int)', call System.IDisposable.Dispose on object 'dvPeiluyot' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="488">In method 'Modules_UserControl_ucSidurim.BuildSidurAndPeiluyot(ref OrderedDictionary, int)', call System.IDisposable.Dispose on object 'up' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="534">'Modules_UserControl_ucSidurim.BuildSidurAndPeiluyot(ref OrderedDictionary, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BuildSidurim(System.Collections.Specialized.OrderedDictionary)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="471">'Modules_UserControl_ucSidurim.BuildSidurim(OrderedDictionary)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BuildSidurPeiluyot(System.Collections.Specialized.OrderedDictionary,System.Int32,System.Data.DataView&amp;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1014">In method 'Modules_UserControl_ucSidurim.BuildSidurPeiluyot(OrderedDictionary, int, ref DataView)', object 'grdPeiluyot' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'grdPeiluyot' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1255">'Modules_UserControl_ucSidurim.BuildSidurPeiluyot(OrderedDictionary, int, ref DataView)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BuildUpdatedSidurimColumns(System.Data.DataTable&amp;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="823">In method 'Modules_UserControl_ucSidurim.BuildUpdatedSidurimColumns(ref DataTable)', object 'dcSidur' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcSidur' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="828">In method 'Modules_UserControl_ucSidurim.BuildUpdatedSidurimColumns(ref DataTable)', object 'dcSidur' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcSidur' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="833">In method 'Modules_UserControl_ucSidurim.BuildUpdatedSidurimColumns(ref DataTable)', object 'dcSidur' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcSidur' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="838">In method 'Modules_UserControl_ucSidurim.BuildUpdatedSidurimColumns(ref DataTable)', object 'dcSidur' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcSidur' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="843">In method 'Modules_UserControl_ucSidurim.BuildUpdatedSidurimColumns(ref DataTable)', object 'dcSidur' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcSidur' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="848">In method 'Modules_UserControl_ucSidurim.BuildUpdatedSidurimColumns(ref DataTable)', object 'dcSidur' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dcSidur' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckIfApprovalExists(System.Int32[],KdsBatch.clSidur&amp;,System.Web.UI.WebControls.TextBox&amp;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="2926">'Modules_UserControl_ucSidurim.CheckIfApprovalExists(int[], ref clSidur, ref TextBox)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckIfApprovalExists(System.Int32[],System.Int32,System.DateTime,System.DateTime,System.Int64,System.Web.UI.WebControls.TextBox&amp;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="2983">'Modules_UserControl_ucSidurim.CheckIfApprovalExists(int[], int, DateTime, DateTime, long, ref TextBox)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConvertHashPeilutToDataView(System.Collections.Specialized.OrderedDictionary)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="995">In method 'Modules_UserControl_ucSidurim.ConvertHashPeilutToDataView(OrderedDictionary)', call System.IDisposable.Dispose on object 'dtPeilutyot' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1007">'Modules_UserControl_ucSidurim.ConvertHashPeilutToDataView(OrderedDictionary)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateAddDayToShatGmarHiddenCell(System.Web.UI.HtmlControls.HtmlTableCell&amp;,System.Int32,KdsBatch.clSidur)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1443">In method 'Modules_UserControl_ucSidurim.CreateAddDayToShatGmarHiddenCell(ref HtmlTableCell, int, clSidur)', object 'txt' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'txt' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateAddPeilutCell(KdsBatch.clSidur,System.Web.UI.HtmlControls.HtmlTableCell&amp;,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1280">In method 'Modules_UserControl_ucSidurim.CreateAddPeilutCell(clSidur, ref HtmlTableCell, int)', object 'imgCollapse' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'imgCollapse' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1296">'Modules_UserControl_ucSidurim.CreateAddPeilutCell(clSidur, ref HtmlTableCell, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateCancelCell(KdsBatch.clSidur,System.Web.UI.HtmlControls.HtmlTableCell&amp;,System.Int32,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1497">In method 'Modules_UserControl_ucSidurim.CreateCancelCell(clSidur, ref HtmlTableCell, int, bool)', object 'btnImage' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'btnImage' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateCancelFlagHiddenCell(KdsBatch.clSidur,System.Web.UI.HtmlControls.HtmlTableCell&amp;,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1452">In method 'Modules_UserControl_ucSidurim.CreateCancelFlagHiddenCell(clSidur, ref HtmlTableCell, int)', object 'txt' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'txt' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateCellForPanel(System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="317">In method 'Modules_UserControl_ucSidurim.CreateCellForPanel(int)', object 'tCell' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'tCell' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="318">In method 'Modules_UserControl_ucSidurim.CreateCellForPanel(int)', object 'tRow' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'tRow' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateCollapsiblePanelExtender(System.Int32,System.String,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="560">In method 'Modules_UserControl_ucSidurim.CreateCollapsiblePanelExtender(int, string, string, int)', object 'Ax' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'Ax' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateDDLExceptionCell(KdsBatch.clSidur,System.Web.UI.HtmlControls.HtmlTableCell&amp;,System.Int32,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1796">In method 'Modules_UserControl_ucSidurim.CreateDDLExceptionCell(clSidur, ref HtmlTableCell, int, bool)', object 'ddl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ddl' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1793">In method 'Modules_UserControl_ucSidurim.CreateDDLExceptionCell(clSidur, ref HtmlTableCell, int, bool)', call System.IDisposable.Dispose on object 'imgErr' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateDDLPitzulHafsakaCell(KdsBatch.clSidur,System.Web.UI.HtmlControls.HtmlTableCell&amp;,System.Int32,System.Boolean,System.Collections.Specialized.OrderedDictionary&amp;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1744">In method 'Modules_UserControl_ucSidurim.CreateDDLPitzulHafsakaCell(clSidur, ref HtmlTableCell, int, bool, ref OrderedDictionary)', object 'ddl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ddl' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1737">In method 'Modules_UserControl_ucSidurim.CreateDDLPitzulHafsakaCell(clSidur, ref HtmlTableCell, int, bool, ref OrderedDictionary)', call System.IDisposable.Dispose on object 'imgErr' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateDDLResonInCell(KdsBatch.clSidur,System.Web.UI.HtmlControls.HtmlTableCell&amp;,System.Int32,System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="2010">In method 'Modules_UserControl_ucSidurim.CreateDDLResonInCell(clSidur, ref HtmlTableCell, int, bool)', object 'ddl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ddl' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="2012">In method 'Modules_UserControl_ucSidurim.CreateDDLResonInCell(clSidur, ref HtmlTableCell, int, bool)', call System.IDisposable.Dispose on object 'imgErr' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="2074">'Modules_UserControl_ucSidurim.CreateDDLResonInCell(clSidur, ref HtmlTableCell, int, bool)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateDDLResonOutCell(KdsBatch.clSidur,System.Web.UI.HtmlControls.HtmlTableCell&amp;,System.Int32,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1946">In method 'Modules_UserControl_ucSidurim.CreateDDLResonOutCell(clSidur, ref HtmlTableCell, int, bool)', object 'ddl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ddl' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1948">In method 'Modules_UserControl_ucSidurim.CreateDDLResonOutCell(clSidur, ref HtmlTableCell, int, bool)', call System.IDisposable.Dispose on object 'imgErr' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateHashlamaCell(KdsBatch.clSidur,System.Web.UI.HtmlControls.HtmlTableCell&amp;,System.Int32,System.Boolean,System.Data.DataRow[])" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1621">In method 'Modules_UserControl_ucSidurim.CreateHashlamaCell(clSidur, ref HtmlTableCell, int, bool, DataRow[])', call System.IDisposable.Dispose on object 'imgErr' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateLoLetashlumCell(KdsBatch.clSidur,System.Web.UI.HtmlControls.HtmlTableCell&amp;,System.Int32,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1512">In method 'Modules_UserControl_ucSidurim.CreateLoLetashlumCell(clSidur, ref HtmlTableCell, int, bool)', object 'chkBox' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'chkBox' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1522">In method 'Modules_UserControl_ucSidurim.CreateLoLetashlumCell(clSidur, ref HtmlTableCell, int, bool)', object 'imgRemark' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'imgRemark' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateNahagutHiddenCell(KdsBatch.clSidur,System.Web.UI.HtmlControls.HtmlTableCell&amp;,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1461">In method 'Modules_UserControl_ucSidurim.CreateNahagutHiddenCell(clSidur, ref HtmlTableCell, int)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateOutMichsaCell(KdsBatch.clSidur,System.Web.UI.HtmlControls.HtmlTableCell&amp;,System.Int32,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1544">In method 'Modules_UserControl_ucSidurim.CreateOutMichsaCell(clSidur, ref HtmlTableCell, int, bool)', object 'chkBox' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'chkBox' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1568">In method 'Modules_UserControl_ucSidurim.CreateOutMichsaCell(clSidur, ref HtmlTableCell, int, bool)', object 'lDummy' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lDummy' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1583">In method 'Modules_UserControl_ucSidurim.CreateOutMichsaCell(clSidur, ref HtmlTableCell, int, bool)', object 'lDummy' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lDummy' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreatePanel(System.Int32,System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="309">In method 'Modules_UserControl_ucSidurim.CreatePanel(int, string, string)', object 'pnl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'pnl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateShatGmarCell(KdsBatch.clSidur,System.Web.UI.HtmlControls.HtmlTableCell&amp;,System.Int32,System.Data.DataRow[],System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3203">In method 'Modules_UserControl_ucSidurim.CreateShatGmarCell(clSidur, ref HtmlTableCell, int, DataRow[], bool)', call System.IDisposable.Dispose on object 'oTextBox' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3279">'Modules_UserControl_ucSidurim.CreateShatGmarCell(clSidur, ref HtmlTableCell, int, DataRow[], bool)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateShatGmarLetashlumCell(KdsBatch.clSidur,System.Web.UI.HtmlControls.HtmlTableCell&amp;,System.Int32,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1881">In method 'Modules_UserControl_ucSidurim.CreateShatGmarLetashlumCell(clSidur, ref HtmlTableCell, int, bool)', object 'oTextBox' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'oTextBox' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateShatGmarMutereHiddentCell(KdsBatch.clSidur,System.Web.UI.HtmlControls.HtmlTableCell&amp;,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1489">In method 'Modules_UserControl_ucSidurim.CreateShatGmarMutereHiddentCell(clSidur, ref HtmlTableCell, int)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateShatHatchalaCell(KdsBatch.clSidur,System.Web.UI.HtmlControls.HtmlTableCell&amp;,System.Int32,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="2802">In method 'Modules_UserControl_ucSidurim.CreateShatHatchalaCell(clSidur, ref HtmlTableCell, int, bool)', call System.IDisposable.Dispose on object 'oTextBox' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="2875">'Modules_UserControl_ucSidurim.CreateShatHatchalaCell(clSidur, ref HtmlTableCell, int, bool)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateShatHatchalaLetashlumCell(KdsBatch.clSidur,System.Web.UI.HtmlControls.HtmlTableCell&amp;,System.Int32,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1915">In method 'Modules_UserControl_ucSidurim.CreateShatHatchalaLetashlumCell(clSidur, ref HtmlTableCell, int, bool)', object 'oTextBox' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'oTextBox' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateShatHatchalaMutereHiddentCell(KdsBatch.clSidur,System.Web.UI.HtmlControls.HtmlTableCell&amp;,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1479">In method 'Modules_UserControl_ucSidurim.CreateShatHatchalaMutereHiddentCell(clSidur, ref HtmlTableCell, int)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateSidurCell(KdsBatch.clSidur,System.Web.UI.HtmlControls.HtmlTableCell&amp;,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1336">In method 'Modules_UserControl_ucSidurim.CreateSidurCell(clSidur, ref HtmlTableCell, int)', object 'lDummy' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lDummy' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1333">In method 'Modules_UserControl_ucSidurim.CreateSidurCell(clSidur, ref HtmlTableCell, int)', call System.IDisposable.Dispose on object 'imgErr' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1396">In method 'Modules_UserControl_ucSidurim.CreateSidurCell(clSidur, ref HtmlTableCell, int)', call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1350">In method 'Modules_UserControl_ucSidurim.CreateSidurCell(clSidur, ref HtmlTableCell, int)', call System.IDisposable.Dispose on object 'lnkSidur' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1434">'Modules_UserControl_ucSidurim.CreateSidurCell(clSidur, ref HtmlTableCell, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateSidurDateHiddenCell(KdsBatch.clSidur,System.Web.UI.HtmlControls.HtmlTableCell&amp;,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="1470">In method 'Modules_UserControl_ucSidurim.CreateSidurDateHiddenCell(clSidur, ref HtmlTableCell, int)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateSidurHeader()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3412">In method 'Modules_UserControl_ucSidurim.CreateSidurHeader()', object 'hRow' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'hRow' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3469">'Modules_UserControl_ucSidurim.CreateSidurHeader()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateSidurNahagutCell(System.Web.UI.HtmlControls.HtmlTableCell&amp;,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3179">In method 'Modules_UserControl_ucSidurim.CreateSidurNahagutCell(ref HtmlTableCell, int)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateTableCell(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3488">In method 'Modules_UserControl_ucSidurim.CreateTableCell(string, string, string)', object 'hCell' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'hCell' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateTableCell(System.String,System.String,System.String,System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3511">In method 'Modules_UserControl_ucSidurim.CreateTableCell(string, string, string, int?)', object 'hCell' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'hCell' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FillApprovalKeys(System.Data.DataRow[])" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3298">'Modules_UserControl_ucSidurim.FillApprovalKeys(DataRow[])' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FillDataTableRows(System.Data.DataTable&amp;,System.Collections.Specialized.OrderedDictionary)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="812">'Modules_UserControl_ucSidurim.FillDataTableRows(ref DataTable, OrderedDictionary)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDayType(KdsBatch.clSidur&amp;,System.DateTime)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="2405">'Modules_UserControl_ucSidurim.GetDayType(ref clSidur, DateTime)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#grdPeiluyot_RowDataBound(System.Object,System.Web.UI.WebControls.GridViewRowEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3576">In method 'Modules_UserControl_ucSidurim.grdPeiluyot_RowDataBound(object, GridViewRowEventArgs)', object 'oTxt' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'oTxt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3650">'Modules_UserControl_ucSidurim.grdPeiluyot_RowDataBound(object, GridViewRowEventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsElementTime(System.Int64)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="988">'Modules_UserControl_ucSidurim.IsElementTime(long)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsErrorInAdditionFields(System.Data.DataTable,KdsBatch.clSidur&amp;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3150">'Modules_UserControl_ucSidurim.IsErrorInAdditionFields(DataTable, ref clSidur)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsExceptionAllowed(KdsBatch.clSidur&amp;,System.String&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="2768">'Modules_UserControl_ucSidurim.IsExceptionAllowed(ref clSidur, ref string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsMakatHasActualMinPremmision(KdsLibrary.BL.clKavim+enMakatType,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3749">'Modules_UserControl_ucSidurim.IsMakatHasActualMinPremmision(enMakatType, int, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsOnatiyutInPeilutExists(KdsBatch.clSidur&amp;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="418">'Modules_UserControl_ucSidurim.IsOnatiyutInPeilutExists(ref clSidur)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsSadotNosafimLSidur(KdsBatch.clSidur&amp;,System.Data.DataTable,System.Data.DataTable)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="394">'Modules_UserControl_ucSidurim.IsSadotNosafimLSidur(ref clSidur, DataTable, DataTable)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="158">'Modules_UserControl_ucSidurim.Page_Load(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetActualMinutes(System.Web.UI.WebControls.GridViewRowEventArgs,System.Boolean,System.Boolean,KdsLibrary.BL.clKavim+enMakatType,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3805">'Modules_UserControl_ucSidurim.SetActualMinutes(GridViewRowEventArgs, bool, bool, enMakatType, bool)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetAddNesiaRekaColumn(System.Web.UI.WebControls.GridViewRowEventArgs,System.Boolean,System.Boolean,System.Boolean,KdsLibrary.BL.clKavim+enMakatType,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3885">In method 'Modules_UserControl_ucSidurim.SetAddNesiaRekaColumn(GridViewRowEventArgs, bool, bool, bool, enMakatType, int)', object 'imgAddReka' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'imgAddReka' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3893">'Modules_UserControl_ucSidurim.SetAddNesiaRekaColumn(GridViewRowEventArgs, bool, bool, bool, enMakatType, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetCancelColumn(System.Web.UI.WebControls.GridViewRowEventArgs,System.Boolean,System.Boolean,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3928">'Modules_UserControl_ucSidurim.SetCancelColumn(GridViewRowEventArgs, bool, bool, bool)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetCarNumber(System.Web.UI.WebControls.GridViewRowEventArgs,System.Boolean,System.Boolean,System.Int32,System.Boolean,KdsLibrary.BL.clKavim+enMakatType)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="4027">In method 'Modules_UserControl_ucSidurim.SetCarNumber(GridViewRowEventArgs, bool, bool, int, bool, enMakatType)', call System.IDisposable.Dispose on object 'hCell' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="4099">'Modules_UserControl_ucSidurim.SetCarNumber(GridViewRowEventArgs, bool, bool, int, bool, enMakatType)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetDayToAdd(System.Web.UI.WebControls.GridViewRowEventArgs,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3657">In method 'Modules_UserControl_ucSidurim.SetDayToAdd(GridViewRowEventArgs, int)', object '_TextBox' is not disposed along all exception paths. Call System.IDisposable.Dispose on object '_TextBox' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetDefMinutes(System.Web.UI.WebControls.GridViewRowEventArgs,KdsLibrary.BL.clKavim&amp;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3869">'Modules_UserControl_ucSidurim.SetDefMinutes(GridViewRowEventArgs, ref clKavim)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetDescription(System.Web.UI.WebControls.GridViewRowEventArgs,System.Int32,System.Int64,KdsLibrary.BL.clKavim&amp;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3821">In method 'Modules_UserControl_ucSidurim.SetDescription(GridViewRowEventArgs, int, long, ref clKavim)', call System.IDisposable.Dispose on object 'lnkKnisa' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetKisuyTor(System.Web.UI.WebControls.GridViewRowEventArgs,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="4226">In method 'Modules_UserControl_ucSidurim.SetKisuyTor(GridViewRowEventArgs, bool, bool, bool, int, bool)', call System.IDisposable.Dispose on object 'hCell' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="4293">'Modules_UserControl_ucSidurim.SetKisuyTor(GridViewRowEventArgs, bool, bool, bool, int, bool)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetMakatNumber(System.Web.UI.WebControls.GridViewRowEventArgs,System.Boolean,System.Boolean,System.Int32,System.Boolean,KdsLibrary.BL.clKavim+enMakatType&amp;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3942">In method 'Modules_UserControl_ucSidurim.SetMakatNumber(GridViewRowEventArgs, bool, bool, int, bool, ref enMakatType)', call System.IDisposable.Dispose on object 'hCell' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="4010">'Modules_UserControl_ucSidurim.SetMakatNumber(GridViewRowEventArgs, bool, bool, int, bool, ref enMakatType)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetOneError(System.Web.UI.Control,System.Web.UI.HtmlControls.HtmlTableCell,System.Int32,System.DateTime,System.Int32,System.DateTime,System.DateTime,System.Int32,System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3125">In method 'Modules_UserControl_ucSidurim.SetOneError(Control, HtmlTableCell, int, DateTime, int, DateTime, DateTime, int, string, string)', call System.IDisposable.Dispose on object 'dvFieldsErrors' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetOneError(System.Web.UI.Control,System.Web.UI.HtmlControls.HtmlTableCell,System.String,KdsBatch.clSidur&amp;,System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="3103">In method 'Modules_UserControl_ucSidurim.SetOneError(Control, HtmlTableCell, string, ref clSidur, string, string)', call System.IDisposable.Dispose on object 'dvFieldsErrors' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetShatYetiza(System.Web.UI.WebControls.GridViewRowEventArgs,System.Boolean,System.Boolean,System.Int32,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="4116">In method 'Modules_UserControl_ucSidurim.SetShatYetiza(GridViewRowEventArgs, bool, bool, int, bool)', call System.IDisposable.Dispose on object 'hCell' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="4213">'Modules_UserControl_ucSidurim.SetShatYetiza(GridViewRowEventArgs, bool, bool, int, bool)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetSidurParticipate(KdsBatch.clSidur&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="2144">'Modules_UserControl_ucSidurim.SetSidurParticipate(ref clSidur)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_UserControl_ucSidurim+GridControls" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Modules_UserControl_ucSidurim+enControlToAdd[],System.String,System.String,System.String,System.String,System.Web.UI.WebControls.ListItemType,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="5293">'Modules_UserControl_ucSidurim.GridControls.GridControls(Modules_UserControl_ucSidurim.enControlToAdd[], string, string, string, string, ListItemType, string, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_UserControl_ucSidurim+GridViewTemplate" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Modules_UserControl_ucSidurim+GridControls)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="5062">'Modules_UserControl_ucSidurim.GridViewTemplate.GridViewTemplate(Modules_UserControl_ucSidurim.GridControls)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddCustomValidator(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="5228">In method 'Modules_UserControl_ucSidurim.GridViewTemplate.AddCustomValidator(string)', object 'oVld' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'oVld' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddImageButton()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="5240">In method 'Modules_UserControl_ucSidurim.GridViewTemplate.AddImageButton()', object 'oImage' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'oImage' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddNumberMaskedEditExtender(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="5212">In method 'Modules_UserControl_ucSidurim.GridViewTemplate.AddNumberMaskedEditExtender(string)', object 'MaskTextBox' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'MaskTextBox' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddTextBox(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="5180">In method 'Modules_UserControl_ucSidurim.GridViewTemplate.AddTextBox(string)', object 'tb1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'tb1' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddTimeMaskedEditExtender(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="5190">In method 'Modules_UserControl_ucSidurim.GridViewTemplate.AddTimeMaskedEditExtender(string)', object 'MaskTextBox' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'MaskTextBox' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="5204">'Modules_UserControl_ucSidurim.GridViewTemplate.AddTimeMaskedEditExtender(string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="5146">In method 'Modules_UserControl_ucSidurim.GridViewTemplate.ITemplate.InstantiateIn(Control)', object 'chkColumn' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'chkColumn' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="5091">In method 'Modules_UserControl_ucSidurim.GridViewTemplate.ITemplate.InstantiateIn(Control)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="5077">Make 'Modules_UserControl_ucSidurim.GridViewTemplate' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'ITemplate.InstantiateIn(Control)' and is visible to derived classes.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="5152">'Modules_UserControl_ucSidurim.GridViewTemplate.ITemplate.InstantiateIn(Control)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tbItem_DataBinding(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucSidurim.ascx.cs" Line="5173">'Modules_UserControl_ucSidurim.GridViewTemplate.tbItem_DataBinding(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Documents and Settings\meravn\Local Settings\Temp\tmp83A.tmp.cadir\bin\App_Web_fo2002ru.dll">
   <Modules>
    <Module Name="app_web_fo2002ru.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Modules_Batches_HaavaraLesachar" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetCurrentColSort()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Batches" File="HaavaraLesachar.aspx.cs" Line="106">'Modules_Batches_HaavaraLesachar.GetCurrentColSort()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRitzot()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Batches" File="HaavaraLesachar.aspx.cs" Line="81">In method 'Modules_Batches_HaavaraLesachar.GetRitzot()', object 'dvRitzot' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dvRitzot' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#grdRitzot_RowDataBound(System.Object,System.Web.UI.WebControls.GridViewRowEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Batches" File="HaavaraLesachar.aspx.cs" Line="125">In method 'Modules_Batches_HaavaraLesachar.grdRitzot_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Batches" File="HaavaraLesachar.aspx.cs" Line="132">In method 'Modules_Batches_HaavaraLesachar.grdRitzot_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Batches" File="HaavaraLesachar.aspx.cs" Line="118">In method 'Modules_Batches_HaavaraLesachar.grdRitzot_RowDataBound(object, GridViewRowEventArgs)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#grdRitzot_Sorting(System.Object,System.Web.UI.WebControls.GridViewSortEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Batches" File="HaavaraLesachar.aspx.cs" Line="191">'Modules_Batches_HaavaraLesachar.grdRitzot_Sorting(object, GridViewSortEventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Documents and Settings\meravn\Local Settings\Temp\tmp83A.tmp.cadir\bin\App_Web_hnc5qpoq.dll">
   <Modules>
    <Module Name="app_web_hnc5qpoq.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Modules_Requests_HarazatTaalichKlita" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#btnHahlamatNetunimVeshguim_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="HarazatTaalichKlita.aspx.cs" Line="281">'Modules_Requests_HarazatTaalichKlita.btnHahlamatNetunimVeshguim_Click(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnHashlamatNetunimVeShguimHR_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="HarazatTaalichKlita.aspx.cs" Line="235">'Modules_Requests_HarazatTaalichKlita.btnHashlamatNetunimVeShguimHR_Click(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnHasvaatHR_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="HarazatTaalichKlita.aspx.cs" Line="216">'Modules_Requests_HarazatTaalichKlita.btnHasvaatHR_Click(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnIshurim_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="HarazatTaalichKlita.aspx.cs" Line="301">'Modules_Requests_HarazatTaalichKlita.btnIshurim_Click(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnKlitatNetuneySadran_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="HarazatTaalichKlita.aspx.cs" Line="245">In method 'Modules_Requests_HarazatTaalichKlita.btnKlitatNetuneySadran_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'oWsBatch' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="HarazatTaalichKlita.aspx.cs" Line="258">'Modules_Requests_HarazatTaalichKlita.btnKlitatNetuneySadran_Click(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnKlitatShaonim_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="HarazatTaalichKlita.aspx.cs" Line="60">'Modules_Requests_HarazatTaalichKlita.btnKlitatShaonim_Click(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnRianunMatzavOvdim_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="HarazatTaalichKlita.aspx.cs" Line="69">In method 'Modules_Requests_HarazatTaalichKlita.btnRianunMatzavOvdim_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'oWsBatch' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="HarazatTaalichKlita.aspx.cs" Line="75">'Modules_Requests_HarazatTaalichKlita.btnRianunMatzavOvdim_Click(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnRianunMeafyeneiBizua_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="HarazatTaalichKlita.aspx.cs" Line="197">In method 'Modules_Requests_HarazatTaalichKlita.btnRianunMeafyeneiBizua_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'oWsBatch' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="HarazatTaalichKlita.aspx.cs" Line="203">'Modules_Requests_HarazatTaalichKlita.btnRianunMeafyeneiBizua_Click(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnRianunTavlaotHR_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="HarazatTaalichKlita.aspx.cs" Line="172">'Modules_Requests_HarazatTaalichKlita.btnRianunTavlaotHR_Click(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnRianunTavlaotTnua_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="HarazatTaalichKlita.aspx.cs" Line="120">'Modules_Requests_HarazatTaalichKlita.btnRianunTavlaotTnua_Click(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnYeziratYomAvoda_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="HarazatTaalichKlita.aspx.cs" Line="107">'Modules_Requests_HarazatTaalichKlita.btnYeziratYomAvoda_Click(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadTavlaot()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="HarazatTaalichKlita.aspx.cs" Line="47">'Modules_Requests_HarazatTaalichKlita.LoadTavlaot()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TipulMeyuchadRefreshPirteyOvdim()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="HarazatTaalichKlita.aspx.cs" Line="183">In method 'Modules_Requests_HarazatTaalichKlita.TipulMeyuchadRefreshPirteyOvdim()', call System.IDisposable.Dispose on object 'oWsBatch' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="HarazatTaalichKlita.aspx.cs" Line="189">'Modules_Requests_HarazatTaalichKlita.TipulMeyuchadRefreshPirteyOvdim()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Requests_LogTahalich" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetCurrentColSort()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="LogTahalich.aspx.cs" Line="117">'Modules_Requests_LogTahalich.GetCurrentColSort()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#grdLogTahalich_RowDataBound(System.Object,System.Web.UI.WebControls.GridViewRowEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="LogTahalich.aspx.cs" Line="178">In method 'Modules_Requests_LogTahalich.grdLogTahalich_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="LogTahalich.aspx.cs" Line="185">In method 'Modules_Requests_LogTahalich.grdLogTahalich_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="LogTahalich.aspx.cs" Line="171">In method 'Modules_Requests_LogTahalich.grdLogTahalich_RowDataBound(object, GridViewRowEventArgs)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#grdLogTahalich_Sorting(System.Object,System.Web.UI.WebControls.GridViewSortEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="LogTahalich.aspx.cs" Line="161">'Modules_Requests_LogTahalich.grdLogTahalich_Sorting(object, GridViewSortEventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Requests_MaakavBakashot" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetCurrentColSort()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="MaakavBakashot.aspx.cs" Line="141">'Modules_Requests_MaakavBakashot.GetCurrentColSort()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#grdRequest_RowDataBound(System.Object,System.Web.UI.WebControls.GridViewRowEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="MaakavBakashot.aspx.cs" Line="202">In method 'Modules_Requests_MaakavBakashot.grdRequest_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="MaakavBakashot.aspx.cs" Line="209">In method 'Modules_Requests_MaakavBakashot.grdRequest_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="MaakavBakashot.aspx.cs" Line="195">In method 'Modules_Requests_MaakavBakashot.grdRequest_RowDataBound(object, GridViewRowEventArgs)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#grdRequest_Sorting(System.Object,System.Web.UI.WebControls.GridViewSortEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Requests" File="MaakavBakashot.aspx.cs" Line="185">'Modules_Requests_MaakavBakashot.grdRequest_Sorting(object, GridViewSortEventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Documents and Settings\meravn\Local Settings\Temp\tmp83A.tmp.cadir\bin\App_Web_iip2sdev.dll">
   <Modules>
    <Module Name="app_web_iip2sdev.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Modules_ListViewTest" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetSidurimAndPeilut(System.Int32,System.DateTime)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="ListViewTest.aspx.cs" Line="33">'Modules_ListViewTest.GetSidurimAndPeilut(int, DateTime)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Test" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BuildPage()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="Test.aspx.cs" Line="235">In method 'Modules_Test.BuildPage()', object 'btnImage' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'btnImage' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="Test.aspx.cs" Line="255">In method 'Modules_Test.BuildPage()', object 'grdPeiluyot' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'grdPeiluyot' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="Test.aspx.cs" Line="207">In method 'Modules_Test.BuildPage()', object 'hCell' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'hCell' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="Test.aspx.cs" Line="206">In method 'Modules_Test.BuildPage()', object 'hRow' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'hRow' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="Test.aspx.cs" Line="205">In method 'Modules_Test.BuildPage()', object 'hTable' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'hTable' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="Test.aspx.cs" Line="211">In method 'Modules_Test.BuildPage()', object 'oTxt' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'oTxt' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="Test.aspx.cs" Line="216">In method 'Modules_Test.BuildPage()', call System.IDisposable.Dispose on object 'ddl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button3_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="Test.aspx.cs" Line="358">In method 'Modules_Test.Button3_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'oBatchManager' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Button5_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="Test.aspx.cs" Line="760">In method 'Modules_Test.Button5_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'dsSidur' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMasharData(System.Collections.Specialized.OrderedDictionary)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="Test.aspx.cs" Line="127">In method 'Modules_Test.GetMasharData(OrderedDictionary)', call System.IDisposable.Dispose on object 'dtLicenseNumber' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMeafyeneyElementim()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="Test.aspx.cs" Line="166">In method 'Modules_Test.GetMeafyeneyElementim()', call System.IDisposable.Dispose on object 'dtElementim' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="Test.aspx.cs" Line="172">'Modules_Test.GetMeafyeneyElementim()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Test+GridViewTemplate" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddCustomValidator(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="Test.aspx.cs" Line="718">In method 'Modules_Test.GridViewTemplate.AddCustomValidator(string)', object 'oVld' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'oVld' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddImageButton()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="Test.aspx.cs" Line="730">In method 'Modules_Test.GridViewTemplate.AddImageButton()', object 'oImage' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'oImage' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddNumberMaskedEditExtender(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="Test.aspx.cs" Line="702">In method 'Modules_Test.GridViewTemplate.AddNumberMaskedEditExtender(string)', object 'MaskTextBox' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'MaskTextBox' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddTextBox(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="Test.aspx.cs" Line="678">In method 'Modules_Test.GridViewTemplate.AddTextBox(string)', object 'tb1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'tb1' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddTimeMaskedEditExtender(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="Test.aspx.cs" Line="686">In method 'Modules_Test.GridViewTemplate.AddTimeMaskedEditExtender(string)', object 'MaskTextBox' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'MaskTextBox' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="Test.aspx.cs" Line="656">In method 'Modules_Test.GridViewTemplate.ITemplate.InstantiateIn(Control)', object 'chkColumn' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'chkColumn' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="Test.aspx.cs" Line="601">In method 'Modules_Test.GridViewTemplate.ITemplate.InstantiateIn(Control)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="Test.aspx.cs" Line="589">Make 'Modules_Test.GridViewTemplate' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'ITemplate.InstantiateIn(Control)' and is visible to derived classes.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_ucTest" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BuildPage()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="ucTest.ascx.cs" Line="51">In method 'Modules_ucTest.BuildPage()', object 'ddl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ddl' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="ucTest.ascx.cs" Line="98">In method 'Modules_ucTest.BuildPage()', object 'grdPeiluyot' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'grdPeiluyot' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="ucTest.ascx.cs" Line="42">In method 'Modules_ucTest.BuildPage()', object 'hCell' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'hCell' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="ucTest.ascx.cs" Line="41">In method 'Modules_ucTest.BuildPage()', object 'hRow' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'hRow' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="ucTest.ascx.cs" Line="46">In method 'Modules_ucTest.BuildPage()', object 'oTxt' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'oTxt' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="ucTest.ascx.cs" Line="93">In method 'Modules_ucTest.BuildPage()', object 'pnlContent' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'pnlContent' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="ucTest.ascx.cs" Line="82">In method 'Modules_ucTest.BuildPage()', object 'pnlHeader' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'pnlHeader' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="ucTest.ascx.cs" Line="86">In method 'Modules_ucTest.BuildPage()', object 'tCell' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'tCell' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="ucTest.ascx.cs" Line="85">In method 'Modules_ucTest.BuildPage()', object 'tRow' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'tRow' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="ucTest.ascx.cs" Line="40">In method 'Modules_ucTest.BuildPage()', call System.IDisposable.Dispose on object 'hTable' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_ucTest+GridViewTemplate" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddCustomValidator(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="ucTest.ascx.cs" Line="461">In method 'Modules_ucTest.GridViewTemplate.AddCustomValidator(string)', object 'oVld' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'oVld' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddImageButton()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="ucTest.ascx.cs" Line="473">In method 'Modules_ucTest.GridViewTemplate.AddImageButton()', object 'oImage' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'oImage' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddNumberMaskedEditExtender(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="ucTest.ascx.cs" Line="445">In method 'Modules_ucTest.GridViewTemplate.AddNumberMaskedEditExtender(string)', object 'MaskTextBox' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'MaskTextBox' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddTextBox(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="ucTest.ascx.cs" Line="421">In method 'Modules_ucTest.GridViewTemplate.AddTextBox(string)', object 'tb1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'tb1' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddTimeMaskedEditExtender(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="ucTest.ascx.cs" Line="429">In method 'Modules_ucTest.GridViewTemplate.AddTimeMaskedEditExtender(string)', object 'MaskTextBox' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'MaskTextBox' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="ucTest.ascx.cs" Line="399">In method 'Modules_ucTest.GridViewTemplate.ITemplate.InstantiateIn(Control)', object 'chkColumn' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'chkColumn' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="ucTest.ascx.cs" Line="344">In method 'Modules_ucTest.GridViewTemplate.ITemplate.InstantiateIn(Control)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules" File="ucTest.ascx.cs" Line="332">Make 'Modules_ucTest.GridViewTemplate' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'ITemplate.InstantiateIn(Control)' and is visible to derived classes.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Documents and Settings\meravn\Local Settings\Temp\tmp83A.tmp.cadir\bin\App_Web_kgby1sfv.dll">
   <Modules>
    <Module Name="app_web_kgby1sfv.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="DataEntryView" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#grdHistory_RowDataBound(System.Object,System.Web.UI.WebControls.GridViewRowEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\DynamicForms" File="DynamicForms.aspx.cs" Line="484">In method 'DataEntryView.grdHistory_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\DynamicForms" File="DynamicForms.aspx.cs" Line="491">In method 'DataEntryView.grdHistory_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\DynamicForms" File="DynamicForms.aspx.cs" Line="477">In method 'DataEntryView.grdHistory_RowDataBound(object, GridViewRowEventArgs)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetHistoryTable()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\DynamicForms" File="DynamicForms.aspx.cs" Line="370">In method 'DataEntryView.SetHistoryTable()', call System.IDisposable.Dispose on object 'dv' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Documents and Settings\meravn\Local Settings\Temp\tmp83A.tmp.cadir\bin\App_Web_nd3pvl4b.dll">
   <Modules>
    <Module Name="app_web_nd3pvl4b.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Modules_UserControl_MeafyeneyBizua" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#btnBindHistory_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="MeafyeneyBizua.ascx.cs" Line="333">'Modules_UserControl_MeafyeneyBizua.btnBindHistory_Click(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCodeMeafyen(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="MeafyeneyBizua.ascx.cs" Line="465">'Modules_UserControl_MeafyeneyBizua.GetCodeMeafyen(string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCurrentColSort()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="MeafyeneyBizua.ascx.cs" Line="181">'Modules_UserControl_MeafyeneyBizua.GetCurrentColSort()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHistory()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="MeafyeneyBizua.ascx.cs" Line="357">'Modules_UserControl_MeafyeneyBizua.GetHistory()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMeafyeneyBitzua(System.DateTime,System.DateTime)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="MeafyeneyBizua.ascx.cs" Line="144">In method 'Modules_UserControl_MeafyeneyBizua.GetMeafyeneyBitzua(DateTime, DateTime)', object 'dvMeafyeneyBitzua' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dvMeafyeneyBitzua' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="MeafyeneyBizua.ascx.cs" Line="159">'Modules_UserControl_MeafyeneyBizua.GetMeafyeneyBitzua(DateTime, DateTime)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTeurMeafyen(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="MeafyeneyBizua.ascx.cs" Line="436">'Modules_UserControl_MeafyeneyBizua.GetTeurMeafyen(int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#grdHistoriatMeafyen_RowDataBound(System.Object,System.Web.UI.WebControls.GridViewRowEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="MeafyeneyBizua.ascx.cs" Line="382">'Modules_UserControl_MeafyeneyBizua.grdHistoriatMeafyen_RowDataBound(object, GridViewRowEventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#grdMeafyeneyBitzua_RowDataBound(System.Object,System.Web.UI.WebControls.GridViewRowEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="MeafyeneyBizua.ascx.cs" Line="230">In method 'Modules_UserControl_MeafyeneyBizua.grdMeafyeneyBitzua_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="MeafyeneyBizua.ascx.cs" Line="237">In method 'Modules_UserControl_MeafyeneyBizua.grdMeafyeneyBitzua_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="MeafyeneyBizua.ascx.cs" Line="223">In method 'Modules_UserControl_MeafyeneyBizua.grdMeafyeneyBitzua_RowDataBound(object, GridViewRowEventArgs)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="MeafyeneyBizua.ascx.cs" Line="255">'Modules_UserControl_MeafyeneyBizua.grdMeafyeneyBitzua_RowDataBound(object, GridViewRowEventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#grdMeafyeneyBitzua_Sorting(System.Object,System.Web.UI.WebControls.GridViewSortEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="MeafyeneyBizua.ascx.cs" Line="304">'Modules_UserControl_MeafyeneyBizua.grdMeafyeneyBitzua_Sorting(object, GridViewSortEventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowData()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="MeafyeneyBizua.ascx.cs" Line="122">'Modules_UserControl_MeafyeneyBizua.ShowData()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#txtTeurMeafyen_TextChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="MeafyeneyBizua.ascx.cs" Line="407">'Modules_UserControl_MeafyeneyBizua.txtTeurMeafyen_TextChanged(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_UserControl_MonthlyQuota" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#btnSearchWorker_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="MonthlyQuota.ascx.cs" Line="587">In method 'Modules_UserControl_MonthlyQuota.btnSearchWorker_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'Dv' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CalcSumQuotaDemand(System.Web.UI.WebControls.GridViewRow)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="MonthlyQuota.ascx.cs" Line="485">In method 'Modules_UserControl_MonthlyQuota.CalcSumQuotaDemand(GridViewRow)', call System.IDisposable.Dispose on object 'CellToSum' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateTooltip(Modules_UserControl_MonthlyQuota+enColumn,System.Web.UI.WebControls.GridViewRow)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="MonthlyQuota.ascx.cs" Line="467">In method 'Modules_UserControl_MonthlyQuota.CreateTooltip(Modules_UserControl_MonthlyQuota.enColumn, GridViewRow)', call System.IDisposable.Dispose on object 'CurrentCell' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrepareLinkOfCell(Modules_UserControl_MonthlyQuota+enColumn,System.Web.UI.WebControls.GridViewRow)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="MonthlyQuota.ascx.cs" Line="512">In method 'Modules_UserControl_MonthlyQuota.PrepareLinkOfCell(Modules_UserControl_MonthlyQuota.enColumn, GridViewRow)', call System.IDisposable.Dispose on object 'CurrentCell' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetValuesOfDdlMonth()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="MonthlyQuota.ascx.cs" Line="106">In method 'Modules_UserControl_MonthlyQuota.SetValuesOfDdlMonth()', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_UserControl_PirteyOved" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#btnBindHistory_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="PirteyOved.ascx.cs" Line="345">'Modules_UserControl_PirteyOved.btnBindHistory_Click(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCodeNatun(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="PirteyOved.ascx.cs" Line="428">'Modules_UserControl_PirteyOved.GetCodeNatun(string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCurrentColSort()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="PirteyOved.ascx.cs" Line="92">'Modules_UserControl_PirteyOved.GetCurrentColSort()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHistory()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="PirteyOved.ascx.cs" Line="368">'Modules_UserControl_PirteyOved.GetHistory()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPirteyOved(System.DateTime)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="PirteyOved.ascx.cs" Line="138">In method 'Modules_UserControl_PirteyOved.GetPirteyOved(DateTime)', object 'dvPirteyOved' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dvPirteyOved' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="PirteyOved.ascx.cs" Line="154">'Modules_UserControl_PirteyOved.GetPirteyOved(DateTime)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTeurNatun(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="PirteyOved.ascx.cs" Line="398">'Modules_UserControl_PirteyOved.GetTeurNatun(int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#grdPirteyOved_RowDataBound(System.Object,System.Web.UI.WebControls.GridViewRowEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="PirteyOved.ascx.cs" Line="196">In method 'Modules_UserControl_PirteyOved.grdPirteyOved_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="PirteyOved.ascx.cs" Line="203">In method 'Modules_UserControl_PirteyOved.grdPirteyOved_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="PirteyOved.ascx.cs" Line="189">In method 'Modules_UserControl_PirteyOved.grdPirteyOved_RowDataBound(object, GridViewRowEventArgs)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="PirteyOved.ascx.cs" Line="221">'Modules_UserControl_PirteyOved.grdPirteyOved_RowDataBound(object, GridViewRowEventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#grdPirteyOved_Sorting(System.Object,System.Web.UI.WebControls.GridViewSortEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="PirteyOved.ascx.cs" Line="290">'Modules_UserControl_PirteyOved.grdPirteyOved_Sorting(object, GridViewSortEventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="PirteyOved.ascx.cs" Line="31">'Modules_UserControl_PirteyOved.Page_Load(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetPirteyHitkashrut()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="PirteyOved.ascx.cs" Line="244">'Modules_UserControl_PirteyOved.SetPirteyHitkashrut()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowData()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="PirteyOved.ascx.cs" Line="121">'Modules_UserControl_PirteyOved.ShowData()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#txtTeurNatun_TextChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="PirteyOved.ascx.cs" Line="315">'Modules_UserControl_PirteyOved.txtTeurNatun_TextChanged(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_UserControl_StatusOved" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetCurrentColSort()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="StatusOved.ascx.cs" Line="116">'Modules_UserControl_StatusOved.GetCurrentColSort()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetStatusOved()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="StatusOved.ascx.cs" Line="131">In method 'Modules_UserControl_StatusOved.GetStatusOved()', object 'dvStatus' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dvStatus' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="StatusOved.ascx.cs" Line="138">'Modules_UserControl_StatusOved.GetStatusOved()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#grdStatus_RowDataBound(System.Object,System.Web.UI.WebControls.GridViewRowEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="StatusOved.ascx.cs" Line="200">In method 'Modules_UserControl_StatusOved.grdStatus_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="StatusOved.ascx.cs" Line="207">In method 'Modules_UserControl_StatusOved.grdStatus_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="StatusOved.ascx.cs" Line="193">In method 'Modules_UserControl_StatusOved.grdStatus_RowDataBound(object, GridViewRowEventArgs)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="StatusOved.ascx.cs" Line="225">'Modules_UserControl_StatusOved.grdStatus_RowDataBound(object, GridViewRowEventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#grdStatus_Sorting(System.Object,System.Web.UI.WebControls.GridViewSortEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="StatusOved.ascx.cs" Line="180">'Modules_UserControl_StatusOved.grdStatus_Sorting(object, GridViewSortEventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowData()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="StatusOved.ascx.cs" Line="95">'Modules_UserControl_StatusOved.ShowData()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_UserControl_ucAccordionTest" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BuildOneSidur(System.Data.DataRow,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucAccordionTest.ascx.cs" Line="237">In method 'Modules_UserControl_ucAccordionTest.BuildOneSidur(DataRow, int)', object 'ddl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ddl' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucAccordionTest.ascx.cs" Line="243">In method 'Modules_UserControl_ucAccordionTest.BuildOneSidur(DataRow, int)', object 'ddl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ddl' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucAccordionTest.ascx.cs" Line="152">In method 'Modules_UserControl_ucAccordionTest.BuildOneSidur(DataRow, int)', object 'hRow' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'hRow' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucAccordionTest.ascx.cs" Line="151">In method 'Modules_UserControl_ucAccordionTest.BuildOneSidur(DataRow, int)', object 'hTable' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'hTable' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucAccordionTest.ascx.cs" Line="216">In method 'Modules_UserControl_ucAccordionTest.BuildOneSidur(DataRow, int)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucAccordionTest.ascx.cs" Line="223">In method 'Modules_UserControl_ucAccordionTest.BuildOneSidur(DataRow, int)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucAccordionTest.ascx.cs" Line="230">In method 'Modules_UserControl_ucAccordionTest.BuildOneSidur(DataRow, int)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucAccordionTest.ascx.cs" Line="311">'Modules_UserControl_ucAccordionTest.BuildOneSidur(DataRow, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BuildSidurim(System.Data.DataTable)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucAccordionTest.ascx.cs" Line="76">In method 'Modules_UserControl_ucAccordionTest.BuildSidurim(DataTable)', object 'Ax' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'Ax' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucAccordionTest.ascx.cs" Line="67">In method 'Modules_UserControl_ucAccordionTest.BuildSidurim(DataTable)', object 'pnlContent' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'pnlContent' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucAccordionTest.ascx.cs" Line="55">In method 'Modules_UserControl_ucAccordionTest.BuildSidurim(DataTable)', object 'pnlHeader' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'pnlHeader' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucAccordionTest.ascx.cs" Line="60">In method 'Modules_UserControl_ucAccordionTest.BuildSidurim(DataTable)', object 'tCell' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'tCell' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucAccordionTest.ascx.cs" Line="59">In method 'Modules_UserControl_ucAccordionTest.BuildSidurim(DataTable)', object 'tRow' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'tRow' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucAccordionTest.ascx.cs" Line="27">In method 'Modules_UserControl_ucAccordionTest.BuildSidurim(DataTable)', call System.IDisposable.Dispose on object 'grdPeiluyot' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucAccordionTest.ascx.cs" Line="99">'Modules_UserControl_ucAccordionTest.BuildSidurim(DataTable)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BuildSidurPeiluyot(System.Data.DataView,System.Data.DataRow,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucAccordionTest.ascx.cs" Line="107">In method 'Modules_UserControl_ucAccordionTest.BuildSidurPeiluyot(DataView, DataRow, int)', object 'grdPeiluyot' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'grdPeiluyot' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateTableCell(System.String,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucAccordionTest.ascx.cs" Line="319">In method 'Modules_UserControl_ucAccordionTest.CreateTableCell(string, string, string, string)', object 'hCell' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'hCell' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_UserControl_ucLogBakashot" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetCurrentColSort()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucLogBakashot.ascx.cs" Line="138">'Modules_UserControl_ucLogBakashot.GetCurrentColSort()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#grdLogRequest_RowDataBound(System.Object,System.Web.UI.WebControls.GridViewRowEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucLogBakashot.ascx.cs" Line="199">In method 'Modules_UserControl_ucLogBakashot.grdLogRequest_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucLogBakashot.ascx.cs" Line="206">In method 'Modules_UserControl_ucLogBakashot.grdLogRequest_RowDataBound(object, GridViewRowEventArgs)', object 'ImageSort' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ImageSort' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucLogBakashot.ascx.cs" Line="192">In method 'Modules_UserControl_ucLogBakashot.grdLogRequest_RowDataBound(object, GridViewRowEventArgs)', object 'lbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#grdLogRequest_Sorting(System.Object,System.Web.UI.WebControls.GridViewSortEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\UserControl" File="ucLogBakashot.ascx.cs" Line="182">'Modules_UserControl_ucLogBakashot.grdLogRequest_Sorting(object, GridViewSortEventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Documents and Settings\meravn\Local Settings\Temp\tmp83A.tmp.cadir\bin\App_Web_plq510s2.dll">
   <Modules>
    <Module Name="app_web_plq510s2.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Modules_Reports_BackgroundReport" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DisplayEmailLabel()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Reports" File="BackgroundReport.aspx.cs" Line="29">In method 'Modules_Reports_BackgroundReport.DisplayEmailLabel()', call System.IDisposable.Dispose on object 'Dt' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Reports_PresenceReport" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateUser()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Reports" File="PresenceReport.aspx.cs" Line="36">'Modules_Reports_PresenceReport.CreateUser()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreatReport()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Reports" File="PresenceReport.aspx.cs" Line="100">'Modules_Reports_PresenceReport.CreatReport()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ImagePrintClick_Click(System.Object,System.Web.UI.ImageClickEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Reports" File="PresenceReport.aspx.cs" Line="125">In method 'Modules_Reports_PresenceReport.ImagePrintClick_Click(object, ImageClickEventArgs)', object 'fs' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fs' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Reports_ReportFilters" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ddlEzor_SelectedIndexChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Reports" File="ReportFilters.aspx.cs" Line="221">In method 'Modules_Reports_ReportFilters.ddlEzor_SelectedIndexChanged(object, EventArgs)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ddlRitza_SelectedIndexChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Reports" File="ReportFilters.aspx.cs" Line="193">In method 'Modules_Reports_ReportFilters.ddlRitza_SelectedIndexChanged(object, EventArgs)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeByReport()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Reports" File="ReportFilters.aspx.cs" Line="108">In method 'Modules_Reports_ReportFilters.InitializeByReport()', call System.IDisposable.Dispose on object 'dtMisRashemet' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RegionOfWorker" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_RegionOfWorker()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
               <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Reports" File="ReportFilters.aspx.cs" Line="405">In method 'Modules_Reports_ReportFilters.RegionOfWorker.get()', call System.IDisposable.Dispose on object 'Dt' before all references to it are out of scope.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Reports_ReportsList" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#grdReports_RowDataBound(System.Object,System.Web.UI.WebControls.GridViewRowEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Reports" File="ReportsList.aspx.cs" Line="67">In method 'Modules_Reports_ReportsList.grdReports_RowDataBound(object, GridViewRowEventArgs)', call System.IDisposable.Dispose on object 'lbl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Documents and Settings\meravn\Local Settings\Temp\tmp83A.tmp.cadir\bin\App_Web_xfkuwhpe.dll">
   <Modules>
    <Module Name="app_web_xfkuwhpe.dll">
     <Namespaces>
      <Namespace Name="ASP">
       <Types>
        <Type Name="test_vb_test_vb_aspx" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#__BuildControl__control2()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\dev\kds\Main\Kds\KdsWebSite\test_vb" File="test_vb.aspx" Line="6">In method 'test_vb_test_vb_aspx.__BuildControl__control2()', object '__ctrl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object '__ctrl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#__BuildControl__control3()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\dev\kds\Main\Kds\KdsWebSite\test_vb" File="test_vb.aspx" Line="7">In method 'test_vb_test_vb_aspx.__BuildControl__control3()', object '__ctrl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object '__ctrl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Documents and Settings\meravn\Local Settings\Temp\tmp83A.tmp.cadir\bin\App_Web_z1eqybl0.dll">
   <Modules>
    <Module Name="app_web_z1eqybl0.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Modules_Ovdim_BakashatTashlum" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#OpenRequest(System.Int32,System.Single)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="BakashatTashlum.aspx.cs" Line="312">'Modules_Ovdim_BakashatTashlum.OpenRequest(int, float)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="BakashatTashlum.aspx.cs" Line="137">'Modules_Ovdim_BakashatTashlum.Page_Load(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Ovdim_HosafatPeilut" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#btnSave_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatPeilut.aspx.cs" Line="289">'Modules_Ovdim_HosafatPeilut.btnSave_Click(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnShow_OnClick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatPeilut.aspx.cs" Line="98">In method 'Modules_Ovdim_HosafatPeilut.btnShow_OnClick(object, EventArgs)', call System.IDisposable.Dispose on object 'dtKavim' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatPeilut.aspx.cs" Line="149">'Modules_Ovdim_HosafatPeilut.btnShow_OnClick(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsPeilutAlreadyExist()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatPeilut.aspx.cs" Line="318">'Modules_Ovdim_HosafatPeilut.IsPeilutAlreadyExist()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatPeilut.aspx.cs" Line="24">In method 'Modules_Ovdim_HosafatPeilut.Page_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'dtElements' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatPeilut.aspx.cs" Line="26">In method 'Modules_Ovdim_HosafatPeilut.Page_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'dtParametrim' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#setNetuneyEmpty(System.Data.DataTable)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatPeilut.aspx.cs" Line="239">'Modules_Ovdim_HosafatPeilut.setNetuneyEmpty(DataTable)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#setNetuneyKavShirut(System.Data.DataTable)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatPeilut.aspx.cs" Line="194">'Modules_Ovdim_HosafatPeilut.setNetuneyKavShirut(DataTable)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#setNetuneyNamak(System.Data.DataTable)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="HosafatPeilut.aspx.cs" Line="222">'Modules_Ovdim_HosafatPeilut.setNetuneyNamak(DataTable)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Ovdim_NetuneyOved" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="NetuneyOved.aspx.cs" Line="61">'Modules_Ovdim_NetuneyOved.Page_Load(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Ovdim_Rechivim" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BoundTable()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="Rechivim.aspx.cs" Line="47">In method 'Modules_Ovdim_Rechivim.BoundTable()', call System.IDisposable.Dispose on object 'dtBound' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="Rechivim.aspx.cs" Line="79">In method 'Modules_Ovdim_Rechivim.BoundTable()', call System.IDisposable.Dispose on object 'dvSidurim' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Modules_Ovdim_WorkCard" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddAttribute(System.Web.UI.Control)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="544">'Modules_Ovdim_WorkCard.AddAttribute(Control)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddCallOutValidator(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="699">In method 'Modules_Ovdim_WorkCard.AddCallOutValidator(string, string, string)', object 'vldExKisuyTor' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'vldExKisuyTor' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddCustomValidator(System.String,System.String,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="716">In method 'Modules_Ovdim_WorkCard.AddCustomValidator(string, string, string, string, string)', object 'vldCustomValidator' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'vldCustomValidator' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddSidurimPeiluyotColumn(System.Data.DataTable&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="1145">In method 'Modules_Ovdim_WorkCard.AddSidurimPeiluyotColumn(ref DataTable)', call System.IDisposable.Dispose on object 'col' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="1168">'Modules_Ovdim_WorkCard.AddSidurimPeiluyotColumn(ref DataTable)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddTimeMaskedEditExtender(System.String,System.String,System.String,AjaxControlToolkit.MaskedEditType,AjaxControlToolkit.MaskedEditShowSymbol)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="738">In method 'Modules_Ovdim_WorkCard.AddTimeMaskedEditExtender(string, string, string, MaskedEditType, MaskedEditShowSymbol)', object 'oMaskTextBox' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'oMaskTextBox' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="755">'Modules_Ovdim_WorkCard.AddTimeMaskedEditExtender(string, string, string, MaskedEditType, MaskedEditShowSymbol)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BindSibotLehashlamaLeyom()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="1568">In method 'Modules_Ovdim_WorkCard.BindSibotLehashlamaLeyom()', object 'dv' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dv' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BindToDDL(System.String,System.Web.UI.WebControls.DropDownList,System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="1502">In method 'Modules_Ovdim_WorkCard.BindToDDL(string, DropDownList, bool)', object 'dv' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dv' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DefineZmaniNesiotNavigatePage(System.DateTime)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="1466">In method 'Modules_Ovdim_WorkCard.DefineZmaniNesiotNavigatePage(DateTime)', object 'lblNesiot' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lblNesiot' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="1447">In method 'Modules_Ovdim_WorkCard.DefineZmaniNesiotNavigatePage(DateTime)', object 'lnkZmaneyNesiot' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lnkZmaneyNesiot' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnabledHamaraForDay()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="1277">'Modules_Ovdim_WorkCard.EnabledHamaraForDay()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FillIdkunRashemet(KdsLibrary.UDT.COLL_IDKUN_RASHEMET&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="2343">'Modules_Ovdim_WorkCard.FillIdkunRashemet(ref COLL_IDKUN_RASHEMET)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FillIdkunRashemetSidurim(KdsLibrary.UDT.COLL_IDKUN_RASHEMET&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="2356">In method 'Modules_Ovdim_WorkCard.FillIdkunRashemetSidurim(ref COLL_IDKUN_RASHEMET)', call System.IDisposable.Dispose on object '_HypLnk' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="2355">In method 'Modules_Ovdim_WorkCard.FillIdkunRashemetSidurim(ref COLL_IDKUN_RASHEMET)', call System.IDisposable.Dispose on object '_Lbl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FillPeiluyotChanges(System.Int32,System.Int32,System.DateTime,System.DateTime,KdsLibrary.UDT.COLL_OBJ_PEILUT_OVDIM&amp;,System.Web.UI.WebControls.GridView&amp;,KdsBatch.clSidur&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="2736">'Modules_Ovdim_WorkCard.FillPeiluyotChanges(int, int, DateTime, DateTime, ref COLL_OBJ_PEILUT_OVDIM, ref GridView, ref clSidur)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FillSidurimChanges(KdsLibrary.UDT.COLL_SIDURIM_OVDIM&amp;,KdsLibrary.UDT.COLL_OBJ_PEILUT_OVDIM&amp;,KdsLibrary.UDT.COLL_SIDURIM_OVDIM&amp;,KdsLibrary.UDT.COLL_SIDURIM_OVDIM&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="2868">In method 'Modules_Ovdim_WorkCard.FillSidurimChanges(ref COLL_SIDURIM_OVDIM, ref COLL_OBJ_PEILUT_OVDIM, ref COLL_SIDURIM_OVDIM, ref COLL_SIDURIM_OVDIM)', call System.IDisposable.Dispose on object 'oHypLnk' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="2867">In method 'Modules_Ovdim_WorkCard.FillSidurimChanges(ref COLL_SIDURIM_OVDIM, ref COLL_OBJ_PEILUT_OVDIM, ref COLL_SIDURIM_OVDIM, ref COLL_SIDURIM_OVDIM)', call System.IDisposable.Dispose on object 'oLbl' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="3086">'Modules_Ovdim_WorkCard.FillSidurimChanges(ref COLL_SIDURIM_OVDIM, ref COLL_OBJ_PEILUT_OVDIM, ref COLL_SIDURIM_OVDIM, ref COLL_SIDURIM_OVDIM)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FillSidurimForDelete(KdsLibrary.UDT.OBJ_SIDURIM_OVDIM&amp;,KdsLibrary.UDT.OBJ_SIDURIM_OVDIM&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="3178">'Modules_Ovdim_WorkCard.FillSidurimForDelete(ref OBJ_SIDURIM_OVDIM, ref OBJ_SIDURIM_OVDIM)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FillSidurimForInsert(KdsLibrary.UDT.OBJ_SIDURIM_OVDIM&amp;,KdsLibrary.UDT.OBJ_SIDURIM_OVDIM&amp;,KdsBatch.clSidur&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="3220">'Modules_Ovdim_WorkCard.FillSidurimForInsert(ref OBJ_SIDURIM_OVDIM, ref OBJ_SIDURIM_OVDIM, ref clSidur)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FillYemayAvodaChanges(KdsLibrary.UDT.COLL_YAMEY_AVODA_OVDIM&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="3325">'Modules_Ovdim_WorkCard.FillYemayAvodaChanges(ref COLL_YAMEY_AVODA_OVDIM)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCtbElementim(System.DateTime)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="1969">'Modules_Ovdim_WorkCard.GetCtbElementim(DateTime)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMasharData(System.Collections.Specialized.OrderedDictionary)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="956">In method 'Modules_Ovdim_WorkCard.GetMasharData(OrderedDictionary)', call System.IDisposable.Dispose on object 'dtLicenseNumber' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMeafyeneyElementim()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="1417">In method 'Modules_Ovdim_WorkCard.GetMeafyeneyElementim()', call System.IDisposable.Dispose on object 'dtElementim' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="1423">'Modules_Ovdim_WorkCard.GetMeafyeneyElementim()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSidurimAndPeilut(System.Int32,System.DateTime)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="1954">'Modules_Ovdim_WorkCard.GetSidurimAndPeilut(int, DateTime)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasMultiPeiluyot(KdsLibrary.UDT.COLL_OBJ_PEILUT_OVDIM&amp;,KdsLibrary.UDT.OBJ_PEILUT_OVDIM&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="2837">'Modules_Ovdim_WorkCard.HasMultiPeiluyot(ref COLL_OBJ_PEILUT_OVDIM, ref OBJ_PEILUT_OVDIM)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasVehicleTypeWithOutTachograph()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="518">'Modules_Ovdim_WorkCard.HasVehicleTypeWithOutTachograph()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsRashemetProfile()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="285">'Modules_Ovdim_WorkCard.IsRashemetProfile()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="397">In method 'Modules_Ovdim_WorkCard.Page_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'dtLicenseNumbers' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="494">'Modules_Ovdim_WorkCard.Page_Load(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrintCard(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="2025">In method 'Modules_Ovdim_WorkCard.PrintCard(object, EventArgs)', object 'fs' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fs' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RefreshEmployeeData(System.Int32,System.DateTime)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="1198">'Modules_Ovdim_WorkCard.RefreshEmployeeData(int, DateTime)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RunBatchFunctions()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="390">'Modules_Ovdim_WorkCard.RunBatchFunctions()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveCard()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="2214">'Modules_Ovdim_WorkCard.SaveCard()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetEmployeeCardData()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="1019">'Modules_Ovdim_WorkCard.SetEmployeeCardData()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetErrorInPage()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="948">'Modules_Ovdim_WorkCard.SetErrorInPage()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetIdkuneyRashemet()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="327">'Modules_Ovdim_WorkCard.SetIdkuneyRashemet()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetImageForButtonValiditiy()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="1656">In method 'Modules_Ovdim_WorkCard.SetImageForButtonValiditiy()', call System.IDisposable.Dispose on object 'dv' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetLookUpDDL()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="1601">'Modules_Ovdim_WorkCard.SetLookUpDDL()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetLookUpSidurim()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="1524">In method 'Modules_Ovdim_WorkCard.SetLookUpSidurim()', object 'dv' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dv' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="1538">In method 'Modules_Ovdim_WorkCard.SetLookUpSidurim()', object 'dv' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dv' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="1542">'Modules_Ovdim_WorkCard.SetLookUpSidurim()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetOneError(System.Web.UI.Control,System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="835">In method 'Modules_Ovdim_WorkCard.SetOneError(Control, string, string)', call System.IDisposable.Dispose on object 'dvFieldsErrors' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetOneParticipation(KdsBatch.clSidur,System.Web.UI.WebControls.TextBox,System.Web.UI.WebControls.DropDownList,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="691">'Modules_Ovdim_WorkCard.SetOneParticipation(clSidur, TextBox, DropDownList, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetSecurityLevel()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="1631">'Modules_Ovdim_WorkCard.SetSecurityLevel()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowEmployeeDetails(System.Int32,System.DateTime)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="1836">In method 'Modules_Ovdim_WorkCard.ShowEmployeeDetails(int, DateTime)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowLastUpdateData(System.Int32,System.DateTime)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="1860">In method 'Modules_Ovdim_WorkCard.ShowLastUpdateData(int, DateTime)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="1871">'Modules_Ovdim_WorkCard.ShowLastUpdateData(int, DateTime)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SplitSidur(KdsLibrary.UDT.OBJ_SIDURIM_OVDIM&amp;,KdsBatch.clSidur&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite\Modules\Ovdim" File="WorkCard.aspx.cs" Line="3130">'Modules_Ovdim_WorkCard.SplitSidur(ref OBJ_SIDURIM_OVDIM, ref clSidur)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Documents and Settings\meravn\Local Settings\Temp\tmp83A.tmp.cadir\bin\App_Web_zqufty33.dll">
   <Modules>
    <Module Name="app_web_zqufty33.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="ShowPrint" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2011-01-05 12:25:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\dev\kds\Main\Kds\KdsWebSite" File="ShowPrint.aspx.cs" Line="46">'ShowPrint.Page_Load(object, EventArgs)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033">
   <Name>Interface methods should be callable by child types</Name>
   <Description>Explicit method implementations are defined with private accessibility. Classes that derive from classes with explicit method implementations and choose to re-declare them on the class will not be able to call into the base class implementation unless the base class has provided an alternate method with appropriate accessibility. When overriding a base class method that has been hidden by explicit interface implementation, in order to call into the base class implementation, a derived class must cast the base pointer to the relevant interface. When calling through this reference, however, the derived class implementation will actually be invoked, resulting in recursion and an eventual stack overflow.</Description>
   <Resolution Name="Default">Make {0} sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of {1} and is visible to derived classes.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182153(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200">
   <Name>Rethrow to preserve stack details</Name>
   <Description>Use the IL rethrow instruction to preserve original stack details when re-raising a caught exception.</Description>
   <Resolution Name="Default">{0} rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182363(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
 <Exceptions>
  <Exception Keyword="CA0068" Kind="Engine" TreatAsWarning="True">
   <Type>Microsoft.FxCop.Sdk.FxCopException</Type>
   <ExceptionMessage>Debug information could not be found for target assembly 'System.Web.Extensions.Design.dll'. For best analysis results, include the .pdb file with debug information for 'System.Web.Extensions.Design.dll' in the same directory as the target assembly.</ExceptionMessage>
  </Exception>
 </Exceptions>
</FxCopReport>
